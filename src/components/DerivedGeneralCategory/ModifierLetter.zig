// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Modifier_Letter code points.

const std = @import("std");
const mem = std.mem;

const ModifierLetter = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 688,
hi: u21 = 125259,

pub fn init(allocator: *mem.Allocator) !ModifierLetter {
    var instance = ModifierLetter{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 124572),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 0;
    while (index <= 17) : (index += 1) {
        instance.array[index] = true;
    }
    index = 22;
    while (index <= 33) : (index += 1) {
        instance.array[index] = true;
    }
    index = 48;
    while (index <= 52) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[60] = true;
    instance.array[62] = true;
    instance.array[196] = true;
    instance.array[202] = true;
    instance.array[681] = true;
    instance.array[912] = true;
    index = 1077;
    while (index <= 1078) : (index += 1) {
        instance.array[index] = true;
    }
    index = 1348;
    while (index <= 1349) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[1354] = true;
    instance.array[1386] = true;
    instance.array[1396] = true;
    instance.array[1400] = true;
    instance.array[1729] = true;
    instance.array[2966] = true;
    instance.array[3094] = true;
    instance.array[3660] = true;
    instance.array[5415] = true;
    instance.array[5523] = true;
    instance.array[6135] = true;
    index = 6600;
    while (index <= 6605) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6780;
    while (index <= 6842) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6856] = true;
    index = 6891;
    while (index <= 6927) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7617] = true;
    instance.array[7631] = true;
    index = 7648;
    while (index <= 7660) : (index += 1) {
        instance.array[index] = true;
    }
    index = 10700;
    while (index <= 10701) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[10943] = true;
    instance.array[11135] = true;
    instance.array[11605] = true;
    index = 11649;
    while (index <= 11653) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[11659] = true;
    index = 11757;
    while (index <= 11758) : (index += 1) {
        instance.array[index] = true;
    }
    index = 11852;
    while (index <= 11854) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[40293] = true;
    index = 41544;
    while (index <= 41549) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41820] = true;
    instance.array[41935] = true;
    index = 41964;
    while (index <= 41965) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42087;
    while (index <= 42095) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42176] = true;
    instance.array[42200] = true;
    index = 42312;
    while (index <= 42313) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42783] = true;
    instance.array[42806] = true;
    instance.array[42944] = true;
    instance.array[43053] = true;
    index = 43075;
    while (index <= 43076) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43180;
    while (index <= 43183) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[43193] = true;
    instance.array[64704] = true;
    index = 64750;
    while (index <= 64751) : (index += 1) {
        instance.array[index] = true;
    }
    index = 92304;
    while (index <= 92307) : (index += 1) {
        instance.array[index] = true;
    }
    index = 93411;
    while (index <= 93423) : (index += 1) {
        instance.array[index] = true;
    }
    index = 93488;
    while (index <= 93489) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[93491] = true;
    index = 122503;
    while (index <= 122509) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[124571] = true;

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *ModifierLetter) void {
    self.allocator.free(self.array);
}

// isModifierLetter checks if cp is of the kind Modifier_Letter.
pub fn isModifierLetter(self: ModifierLetter, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

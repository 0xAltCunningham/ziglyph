// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Space category code points data.

const std = @import("std");
const Range = @import("../Range.zig");

const Space = @This();

array: [12257]bool = [_]bool{false} ** 12257,
lo: u21 = 32,
hi: u21 = 12288,

pub fn new() Space {
    var instance: Space = Space{};

    instance.array[0] = true;
    instance.array[128] = true;
    instance.array[5728] = true;
    instance.array[8207] = true;
    instance.array[8255] = true;
    instance.array[12256] = true;

    var index: u21 = 0;
    index = 8160;
    while (index <= 8170) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: Struct name.
    return instance;
}

pub fn isSpace(self: Space, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

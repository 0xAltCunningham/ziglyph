// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Noncharacter_Code_Point code points.

const std = @import("std");
const mem = std.mem;

const NoncharacterCodePoint = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 2494,
hi: u21 = 1114111,

pub fn init(allocator: *mem.Allocator) !NoncharacterCodePoint {
    var instance = NoncharacterCodePoint{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 1111618),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 62482;
    while (index <= 62513) : (index += 1) {
        instance.array[index] = true;
    }
    index = 63040;
    while (index <= 63041) : (index += 1) {
        instance.array[index] = true;
    }
    index = 128576;
    while (index <= 128577) : (index += 1) {
        instance.array[index] = true;
    }
    index = 194112;
    while (index <= 194113) : (index += 1) {
        instance.array[index] = true;
    }
    index = 259648;
    while (index <= 259649) : (index += 1) {
        instance.array[index] = true;
    }
    index = 325184;
    while (index <= 325185) : (index += 1) {
        instance.array[index] = true;
    }
    index = 390720;
    while (index <= 390721) : (index += 1) {
        instance.array[index] = true;
    }
    index = 456256;
    while (index <= 456257) : (index += 1) {
        instance.array[index] = true;
    }
    index = 521792;
    while (index <= 521793) : (index += 1) {
        instance.array[index] = true;
    }
    index = 587328;
    while (index <= 587329) : (index += 1) {
        instance.array[index] = true;
    }
    index = 652864;
    while (index <= 652865) : (index += 1) {
        instance.array[index] = true;
    }
    index = 718400;
    while (index <= 718401) : (index += 1) {
        instance.array[index] = true;
    }
    index = 783936;
    while (index <= 783937) : (index += 1) {
        instance.array[index] = true;
    }
    index = 849472;
    while (index <= 849473) : (index += 1) {
        instance.array[index] = true;
    }
    index = 915008;
    while (index <= 915009) : (index += 1) {
        instance.array[index] = true;
    }
    index = 980544;
    while (index <= 980545) : (index += 1) {
        instance.array[index] = true;
    }
    index = 1046080;
    while (index <= 1046081) : (index += 1) {
        instance.array[index] = true;
    }
    index = 1111616;
    while (index <= 1111617) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *NoncharacterCodePoint) void {
    self.allocator.free(self.array);
}

// isNoncharacterCodePoint checks if cp is of the kind Noncharacter_Code_Point.
pub fn isNoncharacterCodePoint(self: NoncharacterCodePoint, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

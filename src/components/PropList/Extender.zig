// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Extender code points.

const std = @import("std");
const mem = std.mem;

const Extender = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 170,
hi: u21 = 125254,

pub fn init(allocator: *mem.Allocator) !Extender {
    var instance = Extender{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 125085),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[13] = true;
    index = 550;
    while (index <= 551) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[1430] = true;
    instance.array[1872] = true;
    instance.array[2731] = true;
    instance.array[3484] = true;
    instance.array[3612] = true;
    instance.array[5984] = true;
    instance.array[6041] = true;
    instance.array[6653] = true;
    instance.array[7052] = true;
    instance.array[7121] = true;
    instance.array[12123] = true;
    index = 12167;
    while (index <= 12171) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12275;
    while (index <= 12276) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12370;
    while (index <= 12372) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[40811] = true;
    instance.array[42338] = true;
    instance.array[43301] = true;
    instance.array[43324] = true;
    instance.array[43462] = true;
    instance.array[43571] = true;
    index = 43593;
    while (index <= 43594) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[65222] = true;
    instance.array[70323] = true;
    index = 70940;
    while (index <= 70942) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[72174] = true;
    index = 92824;
    while (index <= 92825) : (index += 1) {
        instance.array[index] = true;
    }
    index = 94006;
    while (index <= 94007) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[94009] = true;
    index = 123026;
    while (index <= 123027) : (index += 1) {
        instance.array[index] = true;
    }
    index = 125082;
    while (index <= 125084) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Extender) void {
    self.allocator.free(self.array);
}

// isExtender checks if cp is of the kind Extender.
pub fn isExtender(self: Extender, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

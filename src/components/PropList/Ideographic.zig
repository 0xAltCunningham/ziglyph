// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Ideographic code points.

const std = @import("std");
const mem = std.mem;

const Ideographic = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 94,
hi: u21 = 201546,

pub fn init(allocator: *mem.Allocator) !Ideographic {
    var instance = Ideographic{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 201453),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[12200] = true;
    instance.array[12201] = true;
    index = 12227;
    while (index <= 12235) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12250;
    while (index <= 12252) : (index += 1) {
        instance.array[index] = true;
    }
    index = 13218;
    while (index <= 19809) : (index += 1) {
        instance.array[index] = true;
    }
    index = 19874;
    while (index <= 40862) : (index += 1) {
        instance.array[index] = true;
    }
    index = 63650;
    while (index <= 64015) : (index += 1) {
        instance.array[index] = true;
    }
    index = 64018;
    while (index <= 64123) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[94086] = true;
    index = 94114;
    while (index <= 100249) : (index += 1) {
        instance.array[index] = true;
    }
    index = 100258;
    while (index <= 101495) : (index += 1) {
        instance.array[index] = true;
    }
    index = 101538;
    while (index <= 101546) : (index += 1) {
        instance.array[index] = true;
    }
    index = 110866;
    while (index <= 111261) : (index += 1) {
        instance.array[index] = true;
    }
    index = 130978;
    while (index <= 173695) : (index += 1) {
        instance.array[index] = true;
    }
    index = 173730;
    while (index <= 177878) : (index += 1) {
        instance.array[index] = true;
    }
    index = 177890;
    while (index <= 178111) : (index += 1) {
        instance.array[index] = true;
    }
    index = 178114;
    while (index <= 183875) : (index += 1) {
        instance.array[index] = true;
    }
    index = 183890;
    while (index <= 191362) : (index += 1) {
        instance.array[index] = true;
    }
    index = 194466;
    while (index <= 195007) : (index += 1) {
        instance.array[index] = true;
    }
    index = 196514;
    while (index <= 201452) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Ideographic) void {
    self.allocator.free(self.array);
}

// isIdeographic checks if cp is of the kind Ideographic.
pub fn isIdeographic(self: Ideographic, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Unified_Ideograph code points.

const std = @import("std");
const mem = std.mem;

const UnifiedIdeograph = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 847,
hi: u21 = 201546,

pub fn init(allocator: *mem.Allocator) !UnifiedIdeograph {
    var instance = UnifiedIdeograph{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 200700),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 12465;
    while (index <= 19056) : (index += 1) {
        instance.array[index] = true;
    }
    index = 19121;
    while (index <= 40109) : (index += 1) {
        instance.array[index] = true;
    }
    index = 63167;
    while (index <= 63168) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[63170] = true;
    index = 63172;
    while (index <= 63173) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[63184] = true;
    instance.array[63186] = true;
    index = 63188;
    while (index <= 63189) : (index += 1) {
        instance.array[index] = true;
    }
    index = 63192;
    while (index <= 63194) : (index += 1) {
        instance.array[index] = true;
    }
    index = 130225;
    while (index <= 172942) : (index += 1) {
        instance.array[index] = true;
    }
    index = 172977;
    while (index <= 177125) : (index += 1) {
        instance.array[index] = true;
    }
    index = 177137;
    while (index <= 177358) : (index += 1) {
        instance.array[index] = true;
    }
    index = 177361;
    while (index <= 183122) : (index += 1) {
        instance.array[index] = true;
    }
    index = 183137;
    while (index <= 190609) : (index += 1) {
        instance.array[index] = true;
    }
    index = 195761;
    while (index <= 200699) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *UnifiedIdeograph) void {
    self.allocator.free(self.array);
}

// isUnifiedIdeograph checks if cp is of the kind Unified_Ideograph.
pub fn isUnifiedIdeograph(self: UnifiedIdeograph, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Dash code points.

const std = @import("std");
const mem = std.mem;

const Dash = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 45,
hi: u21 = 69293,

pub fn init(allocator: *mem.Allocator) !Dash {
    var instance = Dash{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 69249),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[0] = true;
    instance.array[1373] = true;
    instance.array[1425] = true;
    instance.array[5075] = true;
    instance.array[6105] = true;
    index = 8163;
    while (index <= 8168) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[8230] = true;
    instance.array[8270] = true;
    instance.array[8286] = true;
    instance.array[8677] = true;
    instance.array[11754] = true;
    instance.array[11757] = true;
    index = 11789;
    while (index <= 11790) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[11795] = true;
    instance.array[12271] = true;
    instance.array[12291] = true;
    instance.array[12403] = true;
    index = 65028;
    while (index <= 65029) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[65067] = true;
    instance.array[65078] = true;
    instance.array[65248] = true;
    instance.array[69248] = true;

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Dash) void {
    self.allocator.free(self.array);
}

// isDash checks if cp is of the kind Dash.
pub fn isDash(self: Dash, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

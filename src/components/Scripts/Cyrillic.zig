// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Cyrillic code points.

const std = @import("std");
const mem = std.mem;

const Cyrillic = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 1024,
hi: u21 = 65071,

pub fn init(allocator: *mem.Allocator) !Cyrillic {
    var instance = Cyrillic{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 64048),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 0;
    while (index <= 129) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[130] = true;
    index = 131;
    while (index <= 132) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[135] = true;
    index = 136;
    while (index <= 137) : (index += 1) {
        instance.array[index] = true;
    }
    index = 138;
    while (index <= 303) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6272;
    while (index <= 6280) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6443] = true;
    instance.array[6520] = true;
    index = 10720;
    while (index <= 10751) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41536;
    while (index <= 41581) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41582] = true;
    instance.array[41583] = true;
    index = 41584;
    while (index <= 41586) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41587] = true;
    index = 41588;
    while (index <= 41597) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41598] = true;
    instance.array[41599] = true;
    index = 41600;
    while (index <= 41627) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41628;
    while (index <= 41629) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41630;
    while (index <= 41631) : (index += 1) {
        instance.array[index] = true;
    }
    index = 64046;
    while (index <= 64047) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Cyrillic) void {
    self.allocator.free(self.array);
}

// isCyrillic checks if cp is of the kind Cyrillic.
pub fn isCyrillic(self: Cyrillic, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

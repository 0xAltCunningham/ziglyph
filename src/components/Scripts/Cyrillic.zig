// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Cyrillic code points.

const std = @import("std");
const mem = std.mem;

const Cyrillic = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 1154,
hi: u21 = 65071,

pub fn init(allocator: *mem.Allocator) !Cyrillic {
    var instance = Cyrillic{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 63918),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097022;
    while (index <= 2097151) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[0] = true;
    index = 1;
    while (index <= 2) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[5] = true;
    index = 6;
    while (index <= 7) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8;
    while (index <= 173) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6142;
    while (index <= 6150) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6313] = true;
    instance.array[6390] = true;
    index = 10590;
    while (index <= 10621) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41406;
    while (index <= 41451) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41452] = true;
    instance.array[41453] = true;
    index = 41454;
    while (index <= 41456) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41457] = true;
    index = 41458;
    while (index <= 41467) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[41468] = true;
    instance.array[41469] = true;
    index = 41470;
    while (index <= 41497) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41498;
    while (index <= 41499) : (index += 1) {
        instance.array[index] = true;
    }
    index = 41500;
    while (index <= 41501) : (index += 1) {
        instance.array[index] = true;
    }
    index = 63916;
    while (index <= 63917) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Cyrillic) void {
    self.allocator.free(self.array);
}

// isCyrillic checks if cp is of the kind Cyrillic.
pub fn isCyrillic(self: Cyrillic, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

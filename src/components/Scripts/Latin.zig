// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Latin code points.

const std = @import("std");
const mem = std.mem;

const Latin = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 97,
hi: u21 = 65370,

pub fn init(allocator: *mem.Allocator) !Latin {
    var instance = Latin{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 65274),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097120;
    while (index <= 2097145) : (index += 1) {
        instance.array[index] = true;
    }
    index = 0;
    while (index <= 25) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[73] = true;
    instance.array[89] = true;
    index = 95;
    while (index <= 117) : (index += 1) {
        instance.array[index] = true;
    }
    index = 119;
    while (index <= 149) : (index += 1) {
        instance.array[index] = true;
    }
    index = 151;
    while (index <= 345) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[346] = true;
    index = 347;
    while (index <= 350) : (index += 1) {
        instance.array[index] = true;
    }
    index = 351;
    while (index <= 354) : (index += 1) {
        instance.array[index] = true;
    }
    index = 355;
    while (index <= 562) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[563] = true;
    index = 564;
    while (index <= 590) : (index += 1) {
        instance.array[index] = true;
    }
    index = 591;
    while (index <= 599) : (index += 1) {
        instance.array[index] = true;
    }
    index = 639;
    while (index <= 643) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7327;
    while (index <= 7364) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7371;
    while (index <= 7419) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7425;
    while (index <= 7428) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7434;
    while (index <= 7446) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7448;
    while (index <= 7481) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7482;
    while (index <= 7517) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7583;
    while (index <= 7838) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[8208] = true;
    instance.array[8222] = true;
    index = 8239;
    while (index <= 8251) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8393;
    while (index <= 8394) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[8401] = true;
    instance.array[8429] = true;
    index = 8447;
    while (index <= 8481) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8482;
    while (index <= 8483) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8484;
    while (index <= 8487) : (index += 1) {
        instance.array[index] = true;
    }
    index = 11263;
    while (index <= 11290) : (index += 1) {
        instance.array[index] = true;
    }
    index = 11291;
    while (index <= 11292) : (index += 1) {
        instance.array[index] = true;
    }
    index = 11293;
    while (index <= 11294) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42689;
    while (index <= 42766) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42767] = true;
    index = 42768;
    while (index <= 42790) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42794;
    while (index <= 42797) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42798] = true;
    index = 42799;
    while (index <= 42846) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42849;
    while (index <= 42857) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42900;
    while (index <= 42901) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42902] = true;
    index = 42903;
    while (index <= 42904) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[42905] = true;
    index = 42906;
    while (index <= 42910) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43727;
    while (index <= 43769) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43771;
    while (index <= 43774) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43775;
    while (index <= 43779) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43781;
    while (index <= 43783) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[43784] = true;
    index = 64159;
    while (index <= 64165) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65216;
    while (index <= 65241) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65248;
    while (index <= 65273) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Latin) void {
    self.allocator.free(self.array);
}

// isLatin checks if cp is of the kind Latin.
pub fn isLatin(self: Latin, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Myanmar code points.

const std = @import("std");
const mem = std.mem;

const Myanmar = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 4139,
hi: u21 = 43647,

pub fn init(allocator: *mem.Allocator) !Myanmar {
    var instance = Myanmar{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 39509),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097109;
    while (index <= 2097151) : (index += 1) {
        instance.array[index] = true;
    }
    index = 0;
    while (index <= 1) : (index += 1) {
        instance.array[index] = true;
    }
    index = 2;
    while (index <= 5) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6] = true;
    index = 7;
    while (index <= 12) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[13] = true;
    index = 14;
    while (index <= 15) : (index += 1) {
        instance.array[index] = true;
    }
    index = 16;
    while (index <= 17) : (index += 1) {
        instance.array[index] = true;
    }
    index = 18;
    while (index <= 19) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[20] = true;
    index = 21;
    while (index <= 30) : (index += 1) {
        instance.array[index] = true;
    }
    index = 31;
    while (index <= 36) : (index += 1) {
        instance.array[index] = true;
    }
    index = 37;
    while (index <= 42) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43;
    while (index <= 44) : (index += 1) {
        instance.array[index] = true;
    }
    index = 45;
    while (index <= 46) : (index += 1) {
        instance.array[index] = true;
    }
    index = 47;
    while (index <= 50) : (index += 1) {
        instance.array[index] = true;
    }
    index = 51;
    while (index <= 53) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[54] = true;
    index = 55;
    while (index <= 57) : (index += 1) {
        instance.array[index] = true;
    }
    index = 58;
    while (index <= 59) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60;
    while (index <= 66) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67;
    while (index <= 69) : (index += 1) {
        instance.array[index] = true;
    }
    index = 70;
    while (index <= 73) : (index += 1) {
        instance.array[index] = true;
    }
    index = 74;
    while (index <= 86) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[87] = true;
    index = 88;
    while (index <= 89) : (index += 1) {
        instance.array[index] = true;
    }
    index = 90;
    while (index <= 91) : (index += 1) {
        instance.array[index] = true;
    }
    index = 92;
    while (index <= 97) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[98] = true;
    instance.array[99] = true;
    instance.array[100] = true;
    index = 101;
    while (index <= 110) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111;
    while (index <= 113) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[114] = true;
    index = 115;
    while (index <= 116) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39349;
    while (index <= 39353) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39354] = true;
    instance.array[39355] = true;
    index = 39356;
    while (index <= 39364) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39365;
    while (index <= 39374) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39375;
    while (index <= 39379) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39477;
    while (index <= 39492) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39493] = true;
    index = 39494;
    while (index <= 39499) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39500;
    while (index <= 39502) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39503] = true;
    instance.array[39504] = true;
    instance.array[39505] = true;
    instance.array[39506] = true;
    index = 39507;
    while (index <= 39508) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Myanmar) void {
    self.allocator.free(self.array);
}

// isMyanmar checks if cp is of the kind Myanmar.
pub fn isMyanmar(self: Myanmar, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Myanmar code points.

const std = @import("std");
const mem = std.mem;

const Myanmar = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 4096,
hi: u21 = 43647,

pub fn init(allocator: *mem.Allocator) !Myanmar {
    var instance = Myanmar{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 39552),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 0;
    while (index <= 42) : (index += 1) {
        instance.array[index] = true;
    }
    index = 43;
    while (index <= 44) : (index += 1) {
        instance.array[index] = true;
    }
    index = 45;
    while (index <= 48) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[49] = true;
    index = 50;
    while (index <= 55) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[56] = true;
    index = 57;
    while (index <= 58) : (index += 1) {
        instance.array[index] = true;
    }
    index = 59;
    while (index <= 60) : (index += 1) {
        instance.array[index] = true;
    }
    index = 61;
    while (index <= 62) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[63] = true;
    index = 64;
    while (index <= 73) : (index += 1) {
        instance.array[index] = true;
    }
    index = 74;
    while (index <= 79) : (index += 1) {
        instance.array[index] = true;
    }
    index = 80;
    while (index <= 85) : (index += 1) {
        instance.array[index] = true;
    }
    index = 86;
    while (index <= 87) : (index += 1) {
        instance.array[index] = true;
    }
    index = 88;
    while (index <= 89) : (index += 1) {
        instance.array[index] = true;
    }
    index = 90;
    while (index <= 93) : (index += 1) {
        instance.array[index] = true;
    }
    index = 94;
    while (index <= 96) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[97] = true;
    index = 98;
    while (index <= 100) : (index += 1) {
        instance.array[index] = true;
    }
    index = 101;
    while (index <= 102) : (index += 1) {
        instance.array[index] = true;
    }
    index = 103;
    while (index <= 109) : (index += 1) {
        instance.array[index] = true;
    }
    index = 110;
    while (index <= 112) : (index += 1) {
        instance.array[index] = true;
    }
    index = 113;
    while (index <= 116) : (index += 1) {
        instance.array[index] = true;
    }
    index = 117;
    while (index <= 129) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[130] = true;
    index = 131;
    while (index <= 132) : (index += 1) {
        instance.array[index] = true;
    }
    index = 133;
    while (index <= 134) : (index += 1) {
        instance.array[index] = true;
    }
    index = 135;
    while (index <= 140) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[141] = true;
    instance.array[142] = true;
    instance.array[143] = true;
    index = 144;
    while (index <= 153) : (index += 1) {
        instance.array[index] = true;
    }
    index = 154;
    while (index <= 156) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[157] = true;
    index = 158;
    while (index <= 159) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39392;
    while (index <= 39396) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39397] = true;
    instance.array[39398] = true;
    index = 39399;
    while (index <= 39407) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39408;
    while (index <= 39417) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39418;
    while (index <= 39422) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39520;
    while (index <= 39535) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39536] = true;
    index = 39537;
    while (index <= 39542) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39543;
    while (index <= 39545) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[39546] = true;
    instance.array[39547] = true;
    instance.array[39548] = true;
    instance.array[39549] = true;
    index = 39550;
    while (index <= 39551) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Myanmar) void {
    self.allocator.free(self.array);
}

// isMyanmar checks if cp is of the kind Myanmar.
pub fn isMyanmar(self: Myanmar, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Greek code points.

const std = @import("std");
const mem = std.mem;

const Greek = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 885,
hi: u21 = 119365,

pub fn init(allocator: *mem.Allocator) !Greek {
    var instance = Greek{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 118481),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097147;
    while (index <= 2097150) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[0] = true;
    index = 1;
    while (index <= 2) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[5] = true;
    index = 6;
    while (index <= 8) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[10] = true;
    instance.array[15] = true;
    instance.array[17] = true;
    index = 19;
    while (index <= 21) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[23] = true;
    index = 25;
    while (index <= 44) : (index += 1) {
        instance.array[index] = true;
    }
    index = 46;
    while (index <= 108) : (index += 1) {
        instance.array[index] = true;
    }
    index = 123;
    while (index <= 128) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[129] = true;
    index = 130;
    while (index <= 138) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6577;
    while (index <= 6581) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6632;
    while (index <= 6636) : (index += 1) {
        instance.array[index] = true;
    }
    index = 6641;
    while (index <= 6645) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6730] = true;
    index = 7051;
    while (index <= 7072) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7075;
    while (index <= 7080) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7083;
    while (index <= 7120) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7123;
    while (index <= 7128) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7131;
    while (index <= 7138) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7140] = true;
    instance.array[7142] = true;
    instance.array[7144] = true;
    index = 7146;
    while (index <= 7176) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7179;
    while (index <= 7231) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7233;
    while (index <= 7239) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7240] = true;
    instance.array[7241] = true;
    index = 7242;
    while (index <= 7244) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7245;
    while (index <= 7247) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7249;
    while (index <= 7255) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7256;
    while (index <= 7258) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7259;
    while (index <= 7262) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7265;
    while (index <= 7270) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7272;
    while (index <= 7274) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7275;
    while (index <= 7287) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7288;
    while (index <= 7290) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7293;
    while (index <= 7295) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7297;
    while (index <= 7303) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7304;
    while (index <= 7305) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7601] = true;
    instance.array[42992] = true;
    index = 64971;
    while (index <= 65023) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65024;
    while (index <= 65027) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65028;
    while (index <= 65044) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65045;
    while (index <= 65046) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65047;
    while (index <= 65049) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[65067] = true;
    index = 118411;
    while (index <= 118476) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118477;
    while (index <= 118479) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118480] = true;

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Greek) void {
    self.allocator.free(self.array);
}

// isGreek checks if cp is of the kind Greek.
pub fn isGreek(self: Greek, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

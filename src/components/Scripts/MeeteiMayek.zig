// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Meetei_Mayek code points.

const std = @import("std");
const mem = std.mem;

const MeeteiMayek = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 43755,
hi: u21 = 67669,

pub fn init(allocator: *mem.Allocator) !MeeteiMayek {
    var instance = MeeteiMayek{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 23915),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097141;
    while (index <= 2097151) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[0] = true;
    index = 1;
    while (index <= 2) : (index += 1) {
        instance.array[index] = true;
    }
    index = 3;
    while (index <= 4) : (index += 1) {
        instance.array[index] = true;
    }
    index = 5;
    while (index <= 6) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7] = true;
    index = 8;
    while (index <= 9) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[10] = true;
    instance.array[11] = true;
    index = 213;
    while (index <= 247) : (index += 1) {
        instance.array[index] = true;
    }
    index = 248;
    while (index <= 249) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[250] = true;
    index = 251;
    while (index <= 252) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[253] = true;
    index = 254;
    while (index <= 255) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[256] = true;
    instance.array[257] = true;
    instance.array[258] = true;
    index = 261;
    while (index <= 270) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *MeeteiMayek) void {
    self.allocator.free(self.array);
}

// isMeeteiMayek checks if cp is of the kind Meetei_Mayek.
pub fn isMeeteiMayek(self: MeeteiMayek, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Han code points.

const std = @import("std");
const mem = std.mem;

const Han = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 11931,
hi: u21 = 201546,

pub fn init(allocator: *mem.Allocator) !Han {
    var instance = Han{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 189616),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2097125;
    while (index <= 2097150) : (index += 1) {
        instance.array[index] = true;
    }
    index = 0;
    while (index <= 88) : (index += 1) {
        instance.array[index] = true;
    }
    index = 101;
    while (index <= 314) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[362] = true;
    instance.array[364] = true;
    index = 390;
    while (index <= 398) : (index += 1) {
        instance.array[index] = true;
    }
    index = 413;
    while (index <= 415) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[416] = true;
    index = 1381;
    while (index <= 7972) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8037;
    while (index <= 29025) : (index += 1) {
        instance.array[index] = true;
    }
    index = 51813;
    while (index <= 52178) : (index += 1) {
        instance.array[index] = true;
    }
    index = 52181;
    while (index <= 52286) : (index += 1) {
        instance.array[index] = true;
    }
    index = 82261;
    while (index <= 82262) : (index += 1) {
        instance.array[index] = true;
    }
    index = 119141;
    while (index <= 161858) : (index += 1) {
        instance.array[index] = true;
    }
    index = 161893;
    while (index <= 166041) : (index += 1) {
        instance.array[index] = true;
    }
    index = 166053;
    while (index <= 166274) : (index += 1) {
        instance.array[index] = true;
    }
    index = 166277;
    while (index <= 172038) : (index += 1) {
        instance.array[index] = true;
    }
    index = 172053;
    while (index <= 179525) : (index += 1) {
        instance.array[index] = true;
    }
    index = 182629;
    while (index <= 183170) : (index += 1) {
        instance.array[index] = true;
    }
    index = 184677;
    while (index <= 189615) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Han) void {
    self.allocator.free(self.array);
}

// isHan checks if cp is of the kind Han.
pub fn isHan(self: Han, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

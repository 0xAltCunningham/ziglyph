// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Hangul code points.

const std = @import("std");
const mem = std.mem;

const Hangul = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 4608,
hi: u21 = 65500,

pub fn init(allocator: *mem.Allocator) !Hangul {
    var instance = Hangul{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 60893),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 2096896;
    while (index <= 2097151) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7726;
    while (index <= 7727) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7985;
    while (index <= 8078) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8192;
    while (index <= 8222) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8288;
    while (index <= 8318) : (index += 1) {
        instance.array[index] = true;
    }
    index = 38752;
    while (index <= 38780) : (index += 1) {
        instance.array[index] = true;
    }
    index = 39424;
    while (index <= 50595) : (index += 1) {
        instance.array[index] = true;
    }
    index = 50608;
    while (index <= 50630) : (index += 1) {
        instance.array[index] = true;
    }
    index = 50635;
    while (index <= 50683) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60832;
    while (index <= 60862) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60866;
    while (index <= 60871) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60874;
    while (index <= 60879) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60882;
    while (index <= 60887) : (index += 1) {
        instance.array[index] = true;
    }
    index = 60890;
    while (index <= 60892) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Hangul) void {
    self.allocator.free(self.array);
}

// isHangul checks if cp is of the kind Hangul.
pub fn isHangul(self: Hangul, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

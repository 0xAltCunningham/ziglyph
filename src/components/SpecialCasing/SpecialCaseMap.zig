// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
//! Unicode special case mappings.

const std = @import("std");
const unicode = std.unicode;
const SpecialCaseMap = @This();

pub const SpecialCase = struct {
    countries: [][]const u8,
    conditions: [][]const u8,
    mappings: [3][]const u21,
};

allocator: *std.mem.Allocator,
map: std.AutoHashMap(u21, SpecialCase),

pub fn init(allocator: *std.mem.Allocator) !SpecialCaseMap {
    var instance = SpecialCaseMap{
        .allocator = allocator,
        .map = std.AutoHashMap(u21, []const u21).init(allocator),
    };

    try instance.map.put(0x00DF, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x00DF },
            &[_]u8{ 0x0053, 0x0073 },
            &[_]u8{ 0x0053, 0x0053 },
        },
    });
    try instance.map.put(0x0130, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x0069, 0x0307 },
            &[_]u8{ 0x0130 },
            &[_]u8{ 0x0130 },
        },
    });
    try instance.map.put(0xFB00, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB00 },
            &[_]u8{ 0x0046, 0x0066 },
            &[_]u8{ 0x0046, 0x0046 },
        },
    });
    try instance.map.put(0xFB01, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB01 },
            &[_]u8{ 0x0046, 0x0069 },
            &[_]u8{ 0x0046, 0x0049 },
        },
    });
    try instance.map.put(0xFB02, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB02 },
            &[_]u8{ 0x0046, 0x006C },
            &[_]u8{ 0x0046, 0x004C },
        },
    });
    try instance.map.put(0xFB03, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB03 },
            &[_]u8{ 0x0046, 0x0066, 0x0069 },
            &[_]u8{ 0x0046, 0x0046, 0x0049 },
        },
    });
    try instance.map.put(0xFB04, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB04 },
            &[_]u8{ 0x0046, 0x0066, 0x006C },
            &[_]u8{ 0x0046, 0x0046, 0x004C },
        },
    });
    try instance.map.put(0xFB05, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB05 },
            &[_]u8{ 0x0053, 0x0074 },
            &[_]u8{ 0x0053, 0x0054 },
        },
    });
    try instance.map.put(0xFB06, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB06 },
            &[_]u8{ 0x0053, 0x0074 },
            &[_]u8{ 0x0053, 0x0054 },
        },
    });
    try instance.map.put(0x0587, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x0587 },
            &[_]u8{ 0x0535, 0x0582 },
            &[_]u8{ 0x0535, 0x0552 },
        },
    });
    try instance.map.put(0xFB13, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB13 },
            &[_]u8{ 0x0544, 0x0576 },
            &[_]u8{ 0x0544, 0x0546 },
        },
    });
    try instance.map.put(0xFB14, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB14 },
            &[_]u8{ 0x0544, 0x0565 },
            &[_]u8{ 0x0544, 0x0535 },
        },
    });
    try instance.map.put(0xFB15, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB15 },
            &[_]u8{ 0x0544, 0x056B },
            &[_]u8{ 0x0544, 0x053B },
        },
    });
    try instance.map.put(0xFB16, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB16 },
            &[_]u8{ 0x054E, 0x0576 },
            &[_]u8{ 0x054E, 0x0546 },
        },
    });
    try instance.map.put(0xFB17, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0xFB17 },
            &[_]u8{ 0x0544, 0x056D },
            &[_]u8{ 0x0544, 0x053D },
        },
    });
    try instance.map.put(0x0149, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x0149 },
            &[_]u8{ 0x02BC, 0x004E },
            &[_]u8{ 0x02BC, 0x004E },
        },
    });
    try instance.map.put(0x0390, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x0390 },
            &[_]u8{ 0x0399, 0x0308, 0x0301 },
            &[_]u8{ 0x0399, 0x0308, 0x0301 },
        },
    });
    try instance.map.put(0x03B0, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x03B0 },
            &[_]u8{ 0x03A5, 0x0308, 0x0301 },
            &[_]u8{ 0x03A5, 0x0308, 0x0301 },
        },
    });
    try instance.map.put(0x01F0, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x01F0 },
            &[_]u8{ 0x004A, 0x030C },
            &[_]u8{ 0x004A, 0x030C },
        },
    });
    try instance.map.put(0x1E96, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1E96 },
            &[_]u8{ 0x0048, 0x0331 },
            &[_]u8{ 0x0048, 0x0331 },
        },
    });
    try instance.map.put(0x1E97, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1E97 },
            &[_]u8{ 0x0054, 0x0308 },
            &[_]u8{ 0x0054, 0x0308 },
        },
    });
    try instance.map.put(0x1E98, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1E98 },
            &[_]u8{ 0x0057, 0x030A },
            &[_]u8{ 0x0057, 0x030A },
        },
    });
    try instance.map.put(0x1E99, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1E99 },
            &[_]u8{ 0x0059, 0x030A },
            &[_]u8{ 0x0059, 0x030A },
        },
    });
    try instance.map.put(0x1E9A, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1E9A },
            &[_]u8{ 0x0041, 0x02BE },
            &[_]u8{ 0x0041, 0x02BE },
        },
    });
    try instance.map.put(0x1F50, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F50 },
            &[_]u8{ 0x03A5, 0x0313 },
            &[_]u8{ 0x03A5, 0x0313 },
        },
    });
    try instance.map.put(0x1F52, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F52 },
            &[_]u8{ 0x03A5, 0x0313, 0x0300 },
            &[_]u8{ 0x03A5, 0x0313, 0x0300 },
        },
    });
    try instance.map.put(0x1F54, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F54 },
            &[_]u8{ 0x03A5, 0x0313, 0x0301 },
            &[_]u8{ 0x03A5, 0x0313, 0x0301 },
        },
    });
    try instance.map.put(0x1F56, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F56 },
            &[_]u8{ 0x03A5, 0x0313, 0x0342 },
            &[_]u8{ 0x03A5, 0x0313, 0x0342 },
        },
    });
    try instance.map.put(0x1FB6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB6 },
            &[_]u8{ 0x0391, 0x0342 },
            &[_]u8{ 0x0391, 0x0342 },
        },
    });
    try instance.map.put(0x1FC6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC6 },
            &[_]u8{ 0x0397, 0x0342 },
            &[_]u8{ 0x0397, 0x0342 },
        },
    });
    try instance.map.put(0x1FD2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FD2 },
            &[_]u8{ 0x0399, 0x0308, 0x0300 },
            &[_]u8{ 0x0399, 0x0308, 0x0300 },
        },
    });
    try instance.map.put(0x1FD3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FD3 },
            &[_]u8{ 0x0399, 0x0308, 0x0301 },
            &[_]u8{ 0x0399, 0x0308, 0x0301 },
        },
    });
    try instance.map.put(0x1FD6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FD6 },
            &[_]u8{ 0x0399, 0x0342 },
            &[_]u8{ 0x0399, 0x0342 },
        },
    });
    try instance.map.put(0x1FD7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FD7 },
            &[_]u8{ 0x0399, 0x0308, 0x0342 },
            &[_]u8{ 0x0399, 0x0308, 0x0342 },
        },
    });
    try instance.map.put(0x1FE2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FE2 },
            &[_]u8{ 0x03A5, 0x0308, 0x0300 },
            &[_]u8{ 0x03A5, 0x0308, 0x0300 },
        },
    });
    try instance.map.put(0x1FE3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FE3 },
            &[_]u8{ 0x03A5, 0x0308, 0x0301 },
            &[_]u8{ 0x03A5, 0x0308, 0x0301 },
        },
    });
    try instance.map.put(0x1FE4, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FE4 },
            &[_]u8{ 0x03A1, 0x0313 },
            &[_]u8{ 0x03A1, 0x0313 },
        },
    });
    try instance.map.put(0x1FE6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FE6 },
            &[_]u8{ 0x03A5, 0x0342 },
            &[_]u8{ 0x03A5, 0x0342 },
        },
    });
    try instance.map.put(0x1FE7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FE7 },
            &[_]u8{ 0x03A5, 0x0308, 0x0342 },
            &[_]u8{ 0x03A5, 0x0308, 0x0342 },
        },
    });
    try instance.map.put(0x1FF6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF6 },
            &[_]u8{ 0x03A9, 0x0342 },
            &[_]u8{ 0x03A9, 0x0342 },
        },
    });
    try instance.map.put(0x1F80, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F80 },
            &[_]u8{ 0x1F88 },
            &[_]u8{ 0x1F08, 0x0399 },
        },
    });
    try instance.map.put(0x1F81, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F81 },
            &[_]u8{ 0x1F89 },
            &[_]u8{ 0x1F09, 0x0399 },
        },
    });
    try instance.map.put(0x1F82, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F82 },
            &[_]u8{ 0x1F8A },
            &[_]u8{ 0x1F0A, 0x0399 },
        },
    });
    try instance.map.put(0x1F83, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F83 },
            &[_]u8{ 0x1F8B },
            &[_]u8{ 0x1F0B, 0x0399 },
        },
    });
    try instance.map.put(0x1F84, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F84 },
            &[_]u8{ 0x1F8C },
            &[_]u8{ 0x1F0C, 0x0399 },
        },
    });
    try instance.map.put(0x1F85, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F85 },
            &[_]u8{ 0x1F8D },
            &[_]u8{ 0x1F0D, 0x0399 },
        },
    });
    try instance.map.put(0x1F86, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F86 },
            &[_]u8{ 0x1F8E },
            &[_]u8{ 0x1F0E, 0x0399 },
        },
    });
    try instance.map.put(0x1F87, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F87 },
            &[_]u8{ 0x1F8F },
            &[_]u8{ 0x1F0F, 0x0399 },
        },
    });
    try instance.map.put(0x1F88, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F80 },
            &[_]u8{ 0x1F88 },
            &[_]u8{ 0x1F08, 0x0399 },
        },
    });
    try instance.map.put(0x1F89, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F81 },
            &[_]u8{ 0x1F89 },
            &[_]u8{ 0x1F09, 0x0399 },
        },
    });
    try instance.map.put(0x1F8A, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F82 },
            &[_]u8{ 0x1F8A },
            &[_]u8{ 0x1F0A, 0x0399 },
        },
    });
    try instance.map.put(0x1F8B, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F83 },
            &[_]u8{ 0x1F8B },
            &[_]u8{ 0x1F0B, 0x0399 },
        },
    });
    try instance.map.put(0x1F8C, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F84 },
            &[_]u8{ 0x1F8C },
            &[_]u8{ 0x1F0C, 0x0399 },
        },
    });
    try instance.map.put(0x1F8D, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F85 },
            &[_]u8{ 0x1F8D },
            &[_]u8{ 0x1F0D, 0x0399 },
        },
    });
    try instance.map.put(0x1F8E, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F86 },
            &[_]u8{ 0x1F8E },
            &[_]u8{ 0x1F0E, 0x0399 },
        },
    });
    try instance.map.put(0x1F8F, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F87 },
            &[_]u8{ 0x1F8F },
            &[_]u8{ 0x1F0F, 0x0399 },
        },
    });
    try instance.map.put(0x1F90, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F90 },
            &[_]u8{ 0x1F98 },
            &[_]u8{ 0x1F28, 0x0399 },
        },
    });
    try instance.map.put(0x1F91, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F91 },
            &[_]u8{ 0x1F99 },
            &[_]u8{ 0x1F29, 0x0399 },
        },
    });
    try instance.map.put(0x1F92, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F92 },
            &[_]u8{ 0x1F9A },
            &[_]u8{ 0x1F2A, 0x0399 },
        },
    });
    try instance.map.put(0x1F93, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F93 },
            &[_]u8{ 0x1F9B },
            &[_]u8{ 0x1F2B, 0x0399 },
        },
    });
    try instance.map.put(0x1F94, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F94 },
            &[_]u8{ 0x1F9C },
            &[_]u8{ 0x1F2C, 0x0399 },
        },
    });
    try instance.map.put(0x1F95, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F95 },
            &[_]u8{ 0x1F9D },
            &[_]u8{ 0x1F2D, 0x0399 },
        },
    });
    try instance.map.put(0x1F96, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F96 },
            &[_]u8{ 0x1F9E },
            &[_]u8{ 0x1F2E, 0x0399 },
        },
    });
    try instance.map.put(0x1F97, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F97 },
            &[_]u8{ 0x1F9F },
            &[_]u8{ 0x1F2F, 0x0399 },
        },
    });
    try instance.map.put(0x1F98, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F90 },
            &[_]u8{ 0x1F98 },
            &[_]u8{ 0x1F28, 0x0399 },
        },
    });
    try instance.map.put(0x1F99, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F91 },
            &[_]u8{ 0x1F99 },
            &[_]u8{ 0x1F29, 0x0399 },
        },
    });
    try instance.map.put(0x1F9A, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F92 },
            &[_]u8{ 0x1F9A },
            &[_]u8{ 0x1F2A, 0x0399 },
        },
    });
    try instance.map.put(0x1F9B, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F93 },
            &[_]u8{ 0x1F9B },
            &[_]u8{ 0x1F2B, 0x0399 },
        },
    });
    try instance.map.put(0x1F9C, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F94 },
            &[_]u8{ 0x1F9C },
            &[_]u8{ 0x1F2C, 0x0399 },
        },
    });
    try instance.map.put(0x1F9D, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F95 },
            &[_]u8{ 0x1F9D },
            &[_]u8{ 0x1F2D, 0x0399 },
        },
    });
    try instance.map.put(0x1F9E, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F96 },
            &[_]u8{ 0x1F9E },
            &[_]u8{ 0x1F2E, 0x0399 },
        },
    });
    try instance.map.put(0x1F9F, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1F97 },
            &[_]u8{ 0x1F9F },
            &[_]u8{ 0x1F2F, 0x0399 },
        },
    });
    try instance.map.put(0x1FA0, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA0 },
            &[_]u8{ 0x1FA8 },
            &[_]u8{ 0x1F68, 0x0399 },
        },
    });
    try instance.map.put(0x1FA1, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA1 },
            &[_]u8{ 0x1FA9 },
            &[_]u8{ 0x1F69, 0x0399 },
        },
    });
    try instance.map.put(0x1FA2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA2 },
            &[_]u8{ 0x1FAA },
            &[_]u8{ 0x1F6A, 0x0399 },
        },
    });
    try instance.map.put(0x1FA3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA3 },
            &[_]u8{ 0x1FAB },
            &[_]u8{ 0x1F6B, 0x0399 },
        },
    });
    try instance.map.put(0x1FA4, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA4 },
            &[_]u8{ 0x1FAC },
            &[_]u8{ 0x1F6C, 0x0399 },
        },
    });
    try instance.map.put(0x1FA5, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA5 },
            &[_]u8{ 0x1FAD },
            &[_]u8{ 0x1F6D, 0x0399 },
        },
    });
    try instance.map.put(0x1FA6, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA6 },
            &[_]u8{ 0x1FAE },
            &[_]u8{ 0x1F6E, 0x0399 },
        },
    });
    try instance.map.put(0x1FA7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA7 },
            &[_]u8{ 0x1FAF },
            &[_]u8{ 0x1F6F, 0x0399 },
        },
    });
    try instance.map.put(0x1FA8, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA0 },
            &[_]u8{ 0x1FA8 },
            &[_]u8{ 0x1F68, 0x0399 },
        },
    });
    try instance.map.put(0x1FA9, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA1 },
            &[_]u8{ 0x1FA9 },
            &[_]u8{ 0x1F69, 0x0399 },
        },
    });
    try instance.map.put(0x1FAA, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA2 },
            &[_]u8{ 0x1FAA },
            &[_]u8{ 0x1F6A, 0x0399 },
        },
    });
    try instance.map.put(0x1FAB, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA3 },
            &[_]u8{ 0x1FAB },
            &[_]u8{ 0x1F6B, 0x0399 },
        },
    });
    try instance.map.put(0x1FAC, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA4 },
            &[_]u8{ 0x1FAC },
            &[_]u8{ 0x1F6C, 0x0399 },
        },
    });
    try instance.map.put(0x1FAD, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA5 },
            &[_]u8{ 0x1FAD },
            &[_]u8{ 0x1F6D, 0x0399 },
        },
    });
    try instance.map.put(0x1FAE, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA6 },
            &[_]u8{ 0x1FAE },
            &[_]u8{ 0x1F6E, 0x0399 },
        },
    });
    try instance.map.put(0x1FAF, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FA7 },
            &[_]u8{ 0x1FAF },
            &[_]u8{ 0x1F6F, 0x0399 },
        },
    });
    try instance.map.put(0x1FB3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB3 },
            &[_]u8{ 0x1FBC },
            &[_]u8{ 0x0391, 0x0399 },
        },
    });
    try instance.map.put(0x1FBC, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB3 },
            &[_]u8{ 0x1FBC },
            &[_]u8{ 0x0391, 0x0399 },
        },
    });
    try instance.map.put(0x1FC3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC3 },
            &[_]u8{ 0x1FCC },
            &[_]u8{ 0x0397, 0x0399 },
        },
    });
    try instance.map.put(0x1FCC, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC3 },
            &[_]u8{ 0x1FCC },
            &[_]u8{ 0x0397, 0x0399 },
        },
    });
    try instance.map.put(0x1FF3, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF3 },
            &[_]u8{ 0x1FFC },
            &[_]u8{ 0x03A9, 0x0399 },
        },
    });
    try instance.map.put(0x1FFC, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF3 },
            &[_]u8{ 0x1FFC },
            &[_]u8{ 0x03A9, 0x0399 },
        },
    });
    try instance.map.put(0x1FB2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB2 },
            &[_]u8{ 0x1FBA, 0x0345 },
            &[_]u8{ 0x1FBA, 0x0399 },
        },
    });
    try instance.map.put(0x1FB4, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB4 },
            &[_]u8{ 0x0386, 0x0345 },
            &[_]u8{ 0x0386, 0x0399 },
        },
    });
    try instance.map.put(0x1FC2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC2 },
            &[_]u8{ 0x1FCA, 0x0345 },
            &[_]u8{ 0x1FCA, 0x0399 },
        },
    });
    try instance.map.put(0x1FC4, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC4 },
            &[_]u8{ 0x0389, 0x0345 },
            &[_]u8{ 0x0389, 0x0399 },
        },
    });
    try instance.map.put(0x1FF2, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF2 },
            &[_]u8{ 0x1FFA, 0x0345 },
            &[_]u8{ 0x1FFA, 0x0399 },
        },
    });
    try instance.map.put(0x1FF4, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF4 },
            &[_]u8{ 0x038F, 0x0345 },
            &[_]u8{ 0x038F, 0x0399 },
        },
    });
    try instance.map.put(0x1FB7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FB7 },
            &[_]u8{ 0x0391, 0x0342, 0x0345 },
            &[_]u8{ 0x0391, 0x0342, 0x0399 },
        },
    });
    try instance.map.put(0x1FC7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FC7 },
            &[_]u8{ 0x0397, 0x0342, 0x0345 },
            &[_]u8{ 0x0397, 0x0342, 0x0399 },
        },
    });
    try instance.map.put(0x1FF7, .{
        .countries = &[0][]u8{},
        .conditions = &[0][]u8{},
        .mappings = [3][]u8{
            &[_]u8{ 0x1FF7 },
            &[_]u8{ 0x03A9, 0x0342, 0x0345 },
            &[_]u8{ 0x03A9, 0x0342, 0x0399 },
        },
    });
    try instance.map.put(0x03A3, .{
        .conditions = &[_][]u8{
            "Final_Sigma",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x03C2 },
            &[_]u8{ 0x03A3 },
            &[_]u8{ 0x03A3 },
        },
    });
    try instance.map.put(0x0307, .{
        .countries = &[_][]u8{
            "lt",
        },
        .conditions = &[_][]u8{
            "After_Soft_Dotted",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0307 },
            &[_]u8{  },
            &[_]u8{  },
        },
    });
    try instance.map.put(0x0049, .{
        .countries = &[_][]u8{
            "lt",
        },
        .conditions = &[_][]u8{
            "More_Above",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069, 0x0307 },
            &[_]u8{ 0x0049 },
            &[_]u8{ 0x0049 },
        },
    });
    try instance.map.put(0x004A, .{
        .countries = &[_][]u8{
            "lt",
        },
        .conditions = &[_][]u8{
            "More_Above",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x006A, 0x0307 },
            &[_]u8{ 0x004A },
            &[_]u8{ 0x004A },
        },
    });
    try instance.map.put(0x012E, .{
        .countries = &[_][]u8{
            "lt",
        },
        .conditions = &[_][]u8{
            "More_Above",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x012F, 0x0307 },
            &[_]u8{ 0x012E },
            &[_]u8{ 0x012E },
        },
    });
    try instance.map.put(0x00CC, .{
        .countries = &[_][]u8{
            "lt",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069, 0x0307, 0x0300 },
            &[_]u8{ 0x00CC },
            &[_]u8{ 0x00CC },
        },
    });
    try instance.map.put(0x00CD, .{
        .countries = &[_][]u8{
            "lt",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069, 0x0307, 0x0301 },
            &[_]u8{ 0x00CD },
            &[_]u8{ 0x00CD },
        },
    });
    try instance.map.put(0x0128, .{
        .countries = &[_][]u8{
            "lt",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069, 0x0307, 0x0303 },
            &[_]u8{ 0x0128 },
            &[_]u8{ 0x0128 },
        },
    });
    try instance.map.put(0x0130, .{
        .countries = &[_][]u8{
            "tr",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069 },
            &[_]u8{ 0x0130 },
            &[_]u8{ 0x0130 },
        },
    });
    try instance.map.put(0x0130, .{
        .countries = &[_][]u8{
            "az",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069 },
            &[_]u8{ 0x0130 },
            &[_]u8{ 0x0130 },
        },
    });
    try instance.map.put(0x0307, .{
        .countries = &[_][]u8{
            "tr",
        },
        .conditions = &[_][]u8{
            "After_I",
        },
        .mappings = [3][]u8{
            &[_]u8{  },
            &[_]u8{ 0x0307 },
            &[_]u8{ 0x0307 },
        },
    });
    try instance.map.put(0x0307, .{
        .countries = &[_][]u8{
            "az",
        },
        .conditions = &[_][]u8{
            "After_I",
        },
        .mappings = [3][]u8{
            &[_]u8{  },
            &[_]u8{ 0x0307 },
            &[_]u8{ 0x0307 },
        },
    });
    try instance.map.put(0x0049, .{
        .countries = &[_][]u8{
            "tr",
        },
        .conditions = &[_][]u8{
            "Not_Before_Dot",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0131 },
            &[_]u8{ 0x0049 },
            &[_]u8{ 0x0049 },
        },
    });
    try instance.map.put(0x0049, .{
        .countries = &[_][]u8{
            "az",
        },
        .conditions = &[_][]u8{
            "Not_Before_Dot",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0131 },
            &[_]u8{ 0x0049 },
            &[_]u8{ 0x0049 },
        },
    });
    try instance.map.put(0x0069, .{
        .countries = &[_][]u8{
            "tr",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069 },
            &[_]u8{ 0x0130 },
            &[_]u8{ 0x0130 },
        },
    });
    try instance.map.put(0x0069, .{
        .countries = &[_][]u8{
            "az",
        },
        .mappings = [3][]u8{
            &[_]u8{ 0x0069 },
            &[_]u8{ 0x0130 },
            &[_]u8{ 0x0130 },
        },
    });

    return instance;
}

const Self = @This();
pub fn deinit(self: *Self) void {
    var iter = self.map.iterator();
    while (iter.next()) |entry| {
        self.allocator.destroy(entry.value);
    }
    self.map.deinit();
}

/// SpecialCaseMap can be a simple, one code point value or a sequence of code points.
pub const SpecialCaseMap = union(enum) {
    single: u21,
    seq: []const u21,
};

pub const Kind = enum {
    Lowercase,
    Titlecase,
    Uppercase,
};

/// toLowerSpecial will convert a code point into its lowercase equivalent for special cases.
pub fn toLowerSpecial(self: Self, cp: u21, countries: ?[][]const u8, conditions: ?[][]const u8) SpecialCaseMap {
    return self.toSpecialCase(cp, .Lowercase, countries, conditions);
}

/// toTitleSpecial will convert a code point into its titlecase equivalent for special cases.
pub fn toTitleSpecial(self: Self, cp: u21, countries: ?[][]const u8, conditions: ?[][]const u8) SpecialCaseMap {
    return self.toSpecialCase(cp, .Titlecase, countries, conditions);
}

/// toUpperSpecial will convert a code point into its uppercase equivalent for special cases.
pub fn toUpperSpecial(self: Self, cp: u21, countries: ?[][]const u8, conditions: ?[][]const u8) SpecialCaseMap {
    return self.toSpecialCase(cp, .Uppercase, countries, conditions);
}

fn toSpecialCase(self: Self, kind: Kind, cp: u21, countries: ?[][]const u8, conditions: ?[][]const u8) SpecialCaseMap {
    if (self.map.get(cp)) |sm| {
        var countries_match = true;
        var conditions_match = true;
        if (countries) |cous| {
            countries_match = matchAll(sm.countries, cous);
        }
        if (conditions) |conds| {
            conditions_match = matchAll(sm.conditions, conds);
        }
        if (countries_match and conditions_match) {
            const index = @enumToInt(kind);
            if (sm.mappings[index].len == 1) {
                return .{ .single = sm.mappings[index][0] };
            } else {
                return .{ .seq = sm.mappings[index] };
            }
        } else {
            return .{ .single = cp };
        }
    } else {
        return .{ .single = cp };
    }
}

fn matchAll(comptime T: type, a: [][]const T, b: [][]const T) bool {
    for (a) |ai| {
        for (b) |bi| {
            if (!mem.eql(T, ai, bi)) return false;
        }
    }
    return true;
}

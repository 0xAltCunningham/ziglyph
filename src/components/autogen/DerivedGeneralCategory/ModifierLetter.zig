// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Lowest code point
//    3. Highest code point
//! Unicode Modifier_Letter code points.

const std = @import("std");
const mem = std.mem;

const ModifierLetter = @This();

allocator: *mem.Allocator,
cp_set: std.AutoHashMap(u21, void),
lo: u21 = 688,
hi: u21 = 125259,

const Singleton = struct {
    instance: *ModifierLetter,
    ref_count: usize,
};

var singleton: ?Singleton = null;

pub fn init(allocator: *mem.Allocator) !*ModifierLetter {
    if (singleton) |*s| {
        s.ref_count += 1;
        return s.instance;
    }

    var instance = try allocator.create(ModifierLetter);

    instance.* = ModifierLetter{
        .allocator = allocator,
        .cp_set = std.AutoHashMap(u21, void).init(allocator),
    };

    var index: u21 = 0;
    index = 688;
    while (index <= 705) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 710;
    while (index <= 721) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 736;
    while (index <= 740) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(748, {});
    try instance.cp_set.put(750, {});
    try instance.cp_set.put(884, {});
    try instance.cp_set.put(890, {});
    try instance.cp_set.put(1369, {});
    try instance.cp_set.put(1600, {});
    index = 1765;
    while (index <= 1766) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 2036;
    while (index <= 2037) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(2042, {});
    try instance.cp_set.put(2074, {});
    try instance.cp_set.put(2084, {});
    try instance.cp_set.put(2088, {});
    try instance.cp_set.put(2417, {});
    try instance.cp_set.put(3654, {});
    try instance.cp_set.put(3782, {});
    try instance.cp_set.put(4348, {});
    try instance.cp_set.put(6103, {});
    try instance.cp_set.put(6211, {});
    try instance.cp_set.put(6823, {});
    index = 7288;
    while (index <= 7293) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 7468;
    while (index <= 7530) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(7544, {});
    index = 7579;
    while (index <= 7615) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(8305, {});
    try instance.cp_set.put(8319, {});
    index = 8336;
    while (index <= 8348) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 11388;
    while (index <= 11389) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(11631, {});
    try instance.cp_set.put(11823, {});
    try instance.cp_set.put(12293, {});
    index = 12337;
    while (index <= 12341) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(12347, {});
    index = 12445;
    while (index <= 12446) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 12540;
    while (index <= 12542) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(40981, {});
    index = 42232;
    while (index <= 42237) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(42508, {});
    try instance.cp_set.put(42623, {});
    index = 42652;
    while (index <= 42653) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 42775;
    while (index <= 42783) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(42864, {});
    try instance.cp_set.put(42888, {});
    index = 43000;
    while (index <= 43001) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(43471, {});
    try instance.cp_set.put(43494, {});
    try instance.cp_set.put(43632, {});
    try instance.cp_set.put(43741, {});
    index = 43763;
    while (index <= 43764) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 43868;
    while (index <= 43871) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(43881, {});
    try instance.cp_set.put(65392, {});
    index = 65438;
    while (index <= 65439) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 92992;
    while (index <= 92995) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 94099;
    while (index <= 94111) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 94176;
    while (index <= 94177) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(94179, {});
    index = 123191;
    while (index <= 123197) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(125259, {});

    // Placeholder: 0. Struct name, 1. Code point kind
    singleton = Singleton{
        .instance = instance,
        .ref_count = 1,
    };

    return instance;
}

pub fn deinit(self: *ModifierLetter) void {
    if (singleton) |*s| {
        s.ref_count -= 1;
        if (s.ref_count == 0) {
            self.cp_set.deinit();
            self.allocator.destroy(s.instance);
            singleton = null;
        }
    }
}

// isModifierLetter checks if cp is of the kind Modifier_Letter.
pub fn isModifierLetter(self: ModifierLetter, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    return self.cp_set.get(cp) != null;
}

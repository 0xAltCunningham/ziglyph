// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Struct name
//    1. Lowest code point
//    2. Highest code point
//! Unicode OtherNumber code points.

lo: u21 = 178,
hi: u21 = 127244,

const OtherNumber = @This();

pub fn isOtherNumber(self: OtherNumber, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    return switch (cp) {
        0xb2...0xb3 => true,
        0xb9 => true,
        0xbc...0xbe => true,
        0x9f4...0x9f9 => true,
        0xb72...0xb77 => true,
        0xbf0...0xbf2 => true,
        0xc78...0xc7e => true,
        0xd58...0xd5e => true,
        0xd70...0xd78 => true,
        0xf2a...0xf33 => true,
        0x1369...0x137c => true,
        0x17f0...0x17f9 => true,
        0x19da => true,
        0x2070 => true,
        0x2074...0x2079 => true,
        0x2080...0x2089 => true,
        0x2150...0x215f => true,
        0x2189 => true,
        0x2460...0x249b => true,
        0x24ea...0x24ff => true,
        0x2776...0x2793 => true,
        0x2cfd => true,
        0x3192...0x3195 => true,
        0x3220...0x3229 => true,
        0x3248...0x324f => true,
        0x3251...0x325f => true,
        0x3280...0x3289 => true,
        0x32b1...0x32bf => true,
        0xa830...0xa835 => true,
        0x10107...0x10133 => true,
        0x10175...0x10178 => true,
        0x1018a...0x1018b => true,
        0x102e1...0x102fb => true,
        0x10320...0x10323 => true,
        0x10858...0x1085f => true,
        0x10879...0x1087f => true,
        0x108a7...0x108af => true,
        0x108fb...0x108ff => true,
        0x10916...0x1091b => true,
        0x109bc...0x109bd => true,
        0x109c0...0x109cf => true,
        0x109d2...0x109ff => true,
        0x10a40...0x10a48 => true,
        0x10a7d...0x10a7e => true,
        0x10a9d...0x10a9f => true,
        0x10aeb...0x10aef => true,
        0x10b58...0x10b5f => true,
        0x10b78...0x10b7f => true,
        0x10ba9...0x10baf => true,
        0x10cfa...0x10cff => true,
        0x10e60...0x10e7e => true,
        0x10f1d...0x10f26 => true,
        0x10f51...0x10f54 => true,
        0x10fc5...0x10fcb => true,
        0x11052...0x11065 => true,
        0x111e1...0x111f4 => true,
        0x1173a...0x1173b => true,
        0x118ea...0x118f2 => true,
        0x11c5a...0x11c6c => true,
        0x11fc0...0x11fd4 => true,
        0x16b5b...0x16b61 => true,
        0x16e80...0x16e96 => true,
        0x1d2e0...0x1d2f3 => true,
        0x1d360...0x1d378 => true,
        0x1e8c7...0x1e8cf => true,
        0x1ec71...0x1ecab => true,
        0x1ecad...0x1ecaf => true,
        0x1ecb1...0x1ecb4 => true,
        0x1ed01...0x1ed2d => true,
        0x1ed2f...0x1ed3d => true,
        0x1f100...0x1f10c => true,
        else => false,
    };
}
// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Lowest code point
//    4. Highest code point
//! Unicode Other_Number code points.

const std = @import("std");
const mem = std.mem;

const OtherNumber = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 178,
hi: u21 = 127244,

pub fn init(allocator: *mem.Allocator) !OtherNumber {
    var instance = OtherNumber{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 127067),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    index = 0;
    while (index <= 1) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[7] = true;
    index = 10;
    while (index <= 12) : (index += 1) {
        instance.array[index] = true;
    }
    index = 2370;
    while (index <= 2375) : (index += 1) {
        instance.array[index] = true;
    }
    index = 2752;
    while (index <= 2757) : (index += 1) {
        instance.array[index] = true;
    }
    index = 2878;
    while (index <= 2880) : (index += 1) {
        instance.array[index] = true;
    }
    index = 3014;
    while (index <= 3020) : (index += 1) {
        instance.array[index] = true;
    }
    index = 3238;
    while (index <= 3244) : (index += 1) {
        instance.array[index] = true;
    }
    index = 3262;
    while (index <= 3270) : (index += 1) {
        instance.array[index] = true;
    }
    index = 3704;
    while (index <= 3713) : (index += 1) {
        instance.array[index] = true;
    }
    index = 4791;
    while (index <= 4810) : (index += 1) {
        instance.array[index] = true;
    }
    index = 5950;
    while (index <= 5959) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[6440] = true;
    instance.array[8126] = true;
    index = 8130;
    while (index <= 8135) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8142;
    while (index <= 8151) : (index += 1) {
        instance.array[index] = true;
    }
    index = 8350;
    while (index <= 8365) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[8407] = true;
    index = 9134;
    while (index <= 9193) : (index += 1) {
        instance.array[index] = true;
    }
    index = 9272;
    while (index <= 9293) : (index += 1) {
        instance.array[index] = true;
    }
    index = 9924;
    while (index <= 9953) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[11339] = true;
    index = 12512;
    while (index <= 12515) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12654;
    while (index <= 12663) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12694;
    while (index <= 12701) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12703;
    while (index <= 12717) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12750;
    while (index <= 12759) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12799;
    while (index <= 12813) : (index += 1) {
        instance.array[index] = true;
    }
    index = 42878;
    while (index <= 42883) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65621;
    while (index <= 65665) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65731;
    while (index <= 65734) : (index += 1) {
        instance.array[index] = true;
    }
    index = 65752;
    while (index <= 65753) : (index += 1) {
        instance.array[index] = true;
    }
    index = 66095;
    while (index <= 66121) : (index += 1) {
        instance.array[index] = true;
    }
    index = 66158;
    while (index <= 66161) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67494;
    while (index <= 67501) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67527;
    while (index <= 67533) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67573;
    while (index <= 67581) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67657;
    while (index <= 67661) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67684;
    while (index <= 67689) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67850;
    while (index <= 67851) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67854;
    while (index <= 67869) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67872;
    while (index <= 67917) : (index += 1) {
        instance.array[index] = true;
    }
    index = 67982;
    while (index <= 67990) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68043;
    while (index <= 68044) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68075;
    while (index <= 68077) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68153;
    while (index <= 68157) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68262;
    while (index <= 68269) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68294;
    while (index <= 68301) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68343;
    while (index <= 68349) : (index += 1) {
        instance.array[index] = true;
    }
    index = 68680;
    while (index <= 68685) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69038;
    while (index <= 69068) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69227;
    while (index <= 69236) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69279;
    while (index <= 69282) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69395;
    while (index <= 69401) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69536;
    while (index <= 69555) : (index += 1) {
        instance.array[index] = true;
    }
    index = 69935;
    while (index <= 69954) : (index += 1) {
        instance.array[index] = true;
    }
    index = 71304;
    while (index <= 71305) : (index += 1) {
        instance.array[index] = true;
    }
    index = 71736;
    while (index <= 71744) : (index += 1) {
        instance.array[index] = true;
    }
    index = 72616;
    while (index <= 72634) : (index += 1) {
        instance.array[index] = true;
    }
    index = 73486;
    while (index <= 73506) : (index += 1) {
        instance.array[index] = true;
    }
    index = 92841;
    while (index <= 92847) : (index += 1) {
        instance.array[index] = true;
    }
    index = 93646;
    while (index <= 93668) : (index += 1) {
        instance.array[index] = true;
    }
    index = 119342;
    while (index <= 119361) : (index += 1) {
        instance.array[index] = true;
    }
    index = 119470;
    while (index <= 119494) : (index += 1) {
        instance.array[index] = true;
    }
    index = 124949;
    while (index <= 124957) : (index += 1) {
        instance.array[index] = true;
    }
    index = 125887;
    while (index <= 125945) : (index += 1) {
        instance.array[index] = true;
    }
    index = 125947;
    while (index <= 125949) : (index += 1) {
        instance.array[index] = true;
    }
    index = 125951;
    while (index <= 125954) : (index += 1) {
        instance.array[index] = true;
    }
    index = 126031;
    while (index <= 126075) : (index += 1) {
        instance.array[index] = true;
    }
    index = 126077;
    while (index <= 126091) : (index += 1) {
        instance.array[index] = true;
    }
    index = 127054;
    while (index <= 127066) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name, 1. Code point kind
    return instance;
}

pub fn deinit(self: *OtherNumber) void {
    self.allocator.free(self.array);
}

// isOtherNumber checks if cp is of the kind Other_Number.
pub fn isOtherNumber(self: OtherNumber, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

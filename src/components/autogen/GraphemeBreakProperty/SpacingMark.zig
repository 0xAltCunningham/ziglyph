// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Struct name
//    1. Lowest code point
//    2. Highest code point
//! Unicode SpacingMark code points.

const lo: u21 = 0x903;
const hi: u21 = 0x1d16d;

pub fn isSpacingMark(cp: u21) bool {
    if (cp < lo or cp > hi) return false;
    return switch (cp) {
        0x903 => true,
        0x93b => true,
        0x93e...0x940 => true,
        0x949...0x94c => true,
        0x94e...0x94f => true,
        0x982...0x983 => true,
        0x9bf...0x9c0 => true,
        0x9c7...0x9c8 => true,
        0x9cb...0x9cc => true,
        0xa03 => true,
        0xa3e...0xa40 => true,
        0xa83 => true,
        0xabe...0xac0 => true,
        0xac9 => true,
        0xacb...0xacc => true,
        0xb02...0xb03 => true,
        0xb40 => true,
        0xb47...0xb48 => true,
        0xb4b...0xb4c => true,
        0xbbf => true,
        0xbc1...0xbc2 => true,
        0xbc6...0xbc8 => true,
        0xbca...0xbcc => true,
        0xc01...0xc03 => true,
        0xc41...0xc44 => true,
        0xc82...0xc83 => true,
        0xcbe => true,
        0xcc0...0xcc1 => true,
        0xcc3...0xcc4 => true,
        0xcc7...0xcc8 => true,
        0xcca...0xccb => true,
        0xd02...0xd03 => true,
        0xd3f...0xd40 => true,
        0xd46...0xd48 => true,
        0xd4a...0xd4c => true,
        0xd82...0xd83 => true,
        0xdd0...0xdd1 => true,
        0xdd8...0xdde => true,
        0xdf2...0xdf3 => true,
        0xe33 => true,
        0xeb3 => true,
        0xf3e...0xf3f => true,
        0xf7f => true,
        0x1031 => true,
        0x103b...0x103c => true,
        0x1056...0x1057 => true,
        0x1084 => true,
        0x17b6 => true,
        0x17be...0x17c5 => true,
        0x17c7...0x17c8 => true,
        0x1923...0x1926 => true,
        0x1929...0x192b => true,
        0x1930...0x1931 => true,
        0x1933...0x1938 => true,
        0x1a19...0x1a1a => true,
        0x1a55 => true,
        0x1a57 => true,
        0x1a6d...0x1a72 => true,
        0x1b04 => true,
        0x1b3b => true,
        0x1b3d...0x1b41 => true,
        0x1b43...0x1b44 => true,
        0x1b82 => true,
        0x1ba1 => true,
        0x1ba6...0x1ba7 => true,
        0x1baa => true,
        0x1be7 => true,
        0x1bea...0x1bec => true,
        0x1bee => true,
        0x1bf2...0x1bf3 => true,
        0x1c24...0x1c2b => true,
        0x1c34...0x1c35 => true,
        0x1ce1 => true,
        0x1cf7 => true,
        0xa823...0xa824 => true,
        0xa827 => true,
        0xa880...0xa881 => true,
        0xa8b4...0xa8c3 => true,
        0xa952...0xa953 => true,
        0xa983 => true,
        0xa9b4...0xa9b5 => true,
        0xa9ba...0xa9bb => true,
        0xa9be...0xa9c0 => true,
        0xaa2f...0xaa30 => true,
        0xaa33...0xaa34 => true,
        0xaa4d => true,
        0xaaeb => true,
        0xaaee...0xaaef => true,
        0xaaf5 => true,
        0xabe3...0xabe4 => true,
        0xabe6...0xabe7 => true,
        0xabe9...0xabea => true,
        0xabec => true,
        0x11000 => true,
        0x11002 => true,
        0x11082 => true,
        0x110b0...0x110b2 => true,
        0x110b7...0x110b8 => true,
        0x1112c => true,
        0x11145...0x11146 => true,
        0x11182 => true,
        0x111b3...0x111b5 => true,
        0x111bf...0x111c0 => true,
        0x111ce => true,
        0x1122c...0x1122e => true,
        0x11232...0x11233 => true,
        0x11235 => true,
        0x112e0...0x112e2 => true,
        0x11302...0x11303 => true,
        0x1133f => true,
        0x11341...0x11344 => true,
        0x11347...0x11348 => true,
        0x1134b...0x1134d => true,
        0x11362...0x11363 => true,
        0x11435...0x11437 => true,
        0x11440...0x11441 => true,
        0x11445 => true,
        0x114b1...0x114b2 => true,
        0x114b9 => true,
        0x114bb...0x114bc => true,
        0x114be => true,
        0x114c1 => true,
        0x115b0...0x115b1 => true,
        0x115b8...0x115bb => true,
        0x115be => true,
        0x11630...0x11632 => true,
        0x1163b...0x1163c => true,
        0x1163e => true,
        0x116ac => true,
        0x116ae...0x116af => true,
        0x116b6 => true,
        0x11720...0x11721 => true,
        0x11726 => true,
        0x1182c...0x1182e => true,
        0x11838 => true,
        0x11931...0x11935 => true,
        0x11937...0x11938 => true,
        0x1193d => true,
        0x11940 => true,
        0x11942 => true,
        0x119d1...0x119d3 => true,
        0x119dc...0x119df => true,
        0x119e4 => true,
        0x11a39 => true,
        0x11a57...0x11a58 => true,
        0x11a97 => true,
        0x11c2f => true,
        0x11c3e => true,
        0x11ca9 => true,
        0x11cb1 => true,
        0x11cb4 => true,
        0x11d8a...0x11d8e => true,
        0x11d93...0x11d94 => true,
        0x11d96 => true,
        0x11ef5...0x11ef6 => true,
        0x16f51...0x16f87 => true,
        0x16ff0...0x16ff1 => true,
        0x1d166 => true,
        0x1d16d => true,
        else => false,
    };
}
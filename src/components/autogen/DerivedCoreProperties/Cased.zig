// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Struct name
//    1. Lowest code point
//    2. Highest code point
//! Unicode Cased code points.

lo: u21 = 65,
hi: u21 = 127369,

const Cased = @This();

pub fn isCased(self: Cased, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    return switch (cp) {
        0x41...0x5a => true,
        0x61...0x7a => true,
        0xaa => true,
        0xb5 => true,
        0xba => true,
        0xc0...0xd6 => true,
        0xd8...0xf6 => true,
        0xf8...0x1ba => true,
        0x1bc...0x1bf => true,
        0x1c4...0x293 => true,
        0x295...0x2af => true,
        0x2b0...0x2b8 => true,
        0x2c0...0x2c1 => true,
        0x2e0...0x2e4 => true,
        0x345 => true,
        0x370...0x373 => true,
        0x376...0x377 => true,
        0x37a => true,
        0x37b...0x37d => true,
        0x37f => true,
        0x386 => true,
        0x388...0x38a => true,
        0x38c => true,
        0x38e...0x3a1 => true,
        0x3a3...0x3f5 => true,
        0x3f7...0x481 => true,
        0x48a...0x52f => true,
        0x531...0x556 => true,
        0x560...0x588 => true,
        0x10a0...0x10c5 => true,
        0x10c7 => true,
        0x10cd => true,
        0x10d0...0x10fa => true,
        0x10fd...0x10ff => true,
        0x13a0...0x13f5 => true,
        0x13f8...0x13fd => true,
        0x1c80...0x1c88 => true,
        0x1c90...0x1cba => true,
        0x1cbd...0x1cbf => true,
        0x1d00...0x1d2b => true,
        0x1d2c...0x1d6a => true,
        0x1d6b...0x1d77 => true,
        0x1d78 => true,
        0x1d79...0x1d9a => true,
        0x1d9b...0x1dbf => true,
        0x1e00...0x1f15 => true,
        0x1f18...0x1f1d => true,
        0x1f20...0x1f45 => true,
        0x1f48...0x1f4d => true,
        0x1f50...0x1f57 => true,
        0x1f59 => true,
        0x1f5b => true,
        0x1f5d => true,
        0x1f5f...0x1f7d => true,
        0x1f80...0x1fb4 => true,
        0x1fb6...0x1fbc => true,
        0x1fbe => true,
        0x1fc2...0x1fc4 => true,
        0x1fc6...0x1fcc => true,
        0x1fd0...0x1fd3 => true,
        0x1fd6...0x1fdb => true,
        0x1fe0...0x1fec => true,
        0x1ff2...0x1ff4 => true,
        0x1ff6...0x1ffc => true,
        0x2071 => true,
        0x207f => true,
        0x2090...0x209c => true,
        0x2102 => true,
        0x2107 => true,
        0x210a...0x2113 => true,
        0x2115 => true,
        0x2119...0x211d => true,
        0x2124 => true,
        0x2126 => true,
        0x2128 => true,
        0x212a...0x212d => true,
        0x212f...0x2134 => true,
        0x2139 => true,
        0x213c...0x213f => true,
        0x2145...0x2149 => true,
        0x214e => true,
        0x2160...0x217f => true,
        0x2183...0x2184 => true,
        0x24b6...0x24e9 => true,
        0x2c00...0x2c2e => true,
        0x2c30...0x2c5e => true,
        0x2c60...0x2c7b => true,
        0x2c7c...0x2c7d => true,
        0x2c7e...0x2ce4 => true,
        0x2ceb...0x2cee => true,
        0x2cf2...0x2cf3 => true,
        0x2d00...0x2d25 => true,
        0x2d27 => true,
        0x2d2d => true,
        0xa640...0xa66d => true,
        0xa680...0xa69b => true,
        0xa69c...0xa69d => true,
        0xa722...0xa76f => true,
        0xa770 => true,
        0xa771...0xa787 => true,
        0xa78b...0xa78e => true,
        0xa790...0xa7bf => true,
        0xa7c2...0xa7ca => true,
        0xa7f5...0xa7f6 => true,
        0xa7f8...0xa7f9 => true,
        0xa7fa => true,
        0xab30...0xab5a => true,
        0xab5c...0xab5f => true,
        0xab60...0xab68 => true,
        0xab70...0xabbf => true,
        0xfb00...0xfb06 => true,
        0xfb13...0xfb17 => true,
        0xff21...0xff3a => true,
        0xff41...0xff5a => true,
        0x10400...0x1044f => true,
        0x104b0...0x104d3 => true,
        0x104d8...0x104fb => true,
        0x10c80...0x10cb2 => true,
        0x10cc0...0x10cf2 => true,
        0x118a0...0x118df => true,
        0x16e40...0x16e7f => true,
        0x1d400...0x1d454 => true,
        0x1d456...0x1d49c => true,
        0x1d49e...0x1d49f => true,
        0x1d4a2 => true,
        0x1d4a5...0x1d4a6 => true,
        0x1d4a9...0x1d4ac => true,
        0x1d4ae...0x1d4b9 => true,
        0x1d4bb => true,
        0x1d4bd...0x1d4c3 => true,
        0x1d4c5...0x1d505 => true,
        0x1d507...0x1d50a => true,
        0x1d50d...0x1d514 => true,
        0x1d516...0x1d51c => true,
        0x1d51e...0x1d539 => true,
        0x1d53b...0x1d53e => true,
        0x1d540...0x1d544 => true,
        0x1d546 => true,
        0x1d54a...0x1d550 => true,
        0x1d552...0x1d6a5 => true,
        0x1d6a8...0x1d6c0 => true,
        0x1d6c2...0x1d6da => true,
        0x1d6dc...0x1d6fa => true,
        0x1d6fc...0x1d714 => true,
        0x1d716...0x1d734 => true,
        0x1d736...0x1d74e => true,
        0x1d750...0x1d76e => true,
        0x1d770...0x1d788 => true,
        0x1d78a...0x1d7a8 => true,
        0x1d7aa...0x1d7c2 => true,
        0x1d7c4...0x1d7cb => true,
        0x1e900...0x1e943 => true,
        0x1f130...0x1f149 => true,
        0x1f150...0x1f169 => true,
        0x1f170...0x1f189 => true,
        else => false,
    };
}
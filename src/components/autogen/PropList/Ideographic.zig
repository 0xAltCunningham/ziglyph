// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Ideographic code points.

const std = @import("std");
const mem = std.mem;

const Ideographic = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 12294,
hi: u21 = 201546,

pub fn init(allocator: *mem.Allocator) !Ideographic {
    var instance = Ideographic{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 189253),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[0] = true;
    instance.array[1] = true;
    index = 27;
    while (index <= 35) : (index += 1) {
        instance.array[index] = true;
    }
    index = 50;
    while (index <= 52) : (index += 1) {
        instance.array[index] = true;
    }
    index = 1018;
    while (index <= 7609) : (index += 1) {
        instance.array[index] = true;
    }
    index = 7674;
    while (index <= 28662) : (index += 1) {
        instance.array[index] = true;
    }
    index = 51450;
    while (index <= 51815) : (index += 1) {
        instance.array[index] = true;
    }
    index = 51818;
    while (index <= 51923) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[81886] = true;
    index = 81914;
    while (index <= 88049) : (index += 1) {
        instance.array[index] = true;
    }
    index = 88058;
    while (index <= 89295) : (index += 1) {
        instance.array[index] = true;
    }
    index = 89338;
    while (index <= 89346) : (index += 1) {
        instance.array[index] = true;
    }
    index = 98666;
    while (index <= 99061) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118778;
    while (index <= 161495) : (index += 1) {
        instance.array[index] = true;
    }
    index = 161530;
    while (index <= 165678) : (index += 1) {
        instance.array[index] = true;
    }
    index = 165690;
    while (index <= 165911) : (index += 1) {
        instance.array[index] = true;
    }
    index = 165914;
    while (index <= 171675) : (index += 1) {
        instance.array[index] = true;
    }
    index = 171690;
    while (index <= 179162) : (index += 1) {
        instance.array[index] = true;
    }
    index = 182266;
    while (index <= 182807) : (index += 1) {
        instance.array[index] = true;
    }
    index = 184314;
    while (index <= 189252) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Ideographic) void {
    self.allocator.free(self.array);
}

// isIdeographic checks if cp is of the kind Ideographic.
pub fn isIdeographic(self: Ideographic, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

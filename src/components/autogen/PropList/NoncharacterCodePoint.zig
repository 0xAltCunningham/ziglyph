// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Lowest code point
//    3. Highest code point
//! Unicode Noncharacter_Code_Point code points.

const std = @import("std");
const mem = std.mem;

const NoncharacterCodePoint = @This();

allocator: *mem.Allocator,
cp_set: std.AutoHashMap(u21, void),
lo: u21 = 64976,
hi: u21 = 1114111,

const Singleton = struct {
    instance: *NoncharacterCodePoint,
    ref_count: usize,
};

var singleton: ?Singleton = null;

pub fn init(allocator: *mem.Allocator) !*NoncharacterCodePoint {
    if (singleton) |*s| {
        s.ref_count += 1;
        return s.instance;
    }

    var instance = try allocator.create(NoncharacterCodePoint);

    instance.* = NoncharacterCodePoint{
        .allocator = allocator,
        .cp_set = std.AutoHashMap(u21, void).init(allocator),
    };

    var index: u21 = 0;
    index = 64976;
    while (index <= 65007) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 65534;
    while (index <= 65535) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 131070;
    while (index <= 131071) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 196606;
    while (index <= 196607) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 262142;
    while (index <= 262143) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 327678;
    while (index <= 327679) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 393214;
    while (index <= 393215) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 458750;
    while (index <= 458751) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 524286;
    while (index <= 524287) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 589822;
    while (index <= 589823) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 655358;
    while (index <= 655359) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 720894;
    while (index <= 720895) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 786430;
    while (index <= 786431) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 851966;
    while (index <= 851967) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 917502;
    while (index <= 917503) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 983038;
    while (index <= 983039) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 1048574;
    while (index <= 1048575) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    index = 1114110;
    while (index <= 1114111) : (index += 1) {
        try instance.cp_set.put(index, {});
    }

    // Placeholder: 0. Struct name, 1. Code point kind
    singleton = Singleton{
        .instance = instance,
        .ref_count = 1,
    };

    return instance;
}

pub fn deinit(self: *NoncharacterCodePoint) void {
    self.cp_set.deinit();
    if (singleton) |*s| {
        s.ref_count -= 1;
        if (s.ref_count == 0) {
            self.allocator.destroy(s.instance);
            singleton = null;
        }
    }
}

// isNoncharacterCodePoint checks if cp is of the kind Noncharacter_Code_Point.
pub fn isNoncharacterCodePoint(self: NoncharacterCodePoint, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    return self.cp_set.get(cp) != null;
}

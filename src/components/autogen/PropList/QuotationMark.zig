// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Lowest code point
//    3. Highest code point
//! Unicode Quotation_Mark code points.

const std = @import("std");
const mem = std.mem;

const QuotationMark = @This();

allocator: *mem.Allocator,
cp_set: std.AutoHashMap(u21, void),
lo: u21 = 34,
hi: u21 = 65379,

pub fn init(allocator: *mem.Allocator) !QuotationMark {
    var instance = QuotationMark{
        .allocator = allocator,
        .cp_set = std.AutoHashMap(u21, void).init(allocator),
    };

    var index: u21 = 0;
    try instance.cp_set.put(34, {});
    try instance.cp_set.put(39, {});
    try instance.cp_set.put(171, {});
    try instance.cp_set.put(187, {});
    try instance.cp_set.put(8216, {});
    try instance.cp_set.put(8217, {});
    try instance.cp_set.put(8218, {});
    index = 8219;
    while (index <= 8220) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(8221, {});
    try instance.cp_set.put(8222, {});
    try instance.cp_set.put(8223, {});
    try instance.cp_set.put(8249, {});
    try instance.cp_set.put(8250, {});
    try instance.cp_set.put(11842, {});
    try instance.cp_set.put(12300, {});
    try instance.cp_set.put(12301, {});
    try instance.cp_set.put(12302, {});
    try instance.cp_set.put(12303, {});
    try instance.cp_set.put(12317, {});
    index = 12318;
    while (index <= 12319) : (index += 1) {
        try instance.cp_set.put(index, {});
    }
    try instance.cp_set.put(65089, {});
    try instance.cp_set.put(65090, {});
    try instance.cp_set.put(65091, {});
    try instance.cp_set.put(65092, {});
    try instance.cp_set.put(65282, {});
    try instance.cp_set.put(65287, {});
    try instance.cp_set.put(65378, {});
    try instance.cp_set.put(65379, {});

    // Placeholder: 0. Struct name, 1. Code point kind
    return instance;
}

pub fn deinit(self: *QuotationMark) void {
    self.cp_set.deinit();
}

// isQuotationMark checks if cp is of the kind Quotation_Mark.
pub fn isQuotationMark(self: QuotationMark, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    return self.cp_set.get(cp) != null;
}

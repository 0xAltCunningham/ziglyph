// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Lowest code point
//    4. Highest code point
//! Unicode Extender code points.

const std = @import("std");
const mem = std.mem;

const Extender = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 183,
hi: u21 = 125254,

pub fn init(allocator: *mem.Allocator) !Extender {
    var instance = Extender{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 125072),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[0] = true;
    index = 537;
    while (index <= 538) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[1417] = true;
    instance.array[1859] = true;
    instance.array[2718] = true;
    instance.array[3471] = true;
    instance.array[3599] = true;
    instance.array[5971] = true;
    instance.array[6028] = true;
    instance.array[6640] = true;
    instance.array[7039] = true;
    instance.array[7108] = true;
    instance.array[12110] = true;
    index = 12154;
    while (index <= 12158) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12262;
    while (index <= 12263) : (index += 1) {
        instance.array[index] = true;
    }
    index = 12357;
    while (index <= 12359) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[40798] = true;
    instance.array[42325] = true;
    instance.array[43288] = true;
    instance.array[43311] = true;
    instance.array[43449] = true;
    instance.array[43558] = true;
    index = 43580;
    while (index <= 43581) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[65209] = true;
    instance.array[70310] = true;
    index = 70927;
    while (index <= 70929) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[72161] = true;
    index = 92811;
    while (index <= 92812) : (index += 1) {
        instance.array[index] = true;
    }
    index = 93993;
    while (index <= 93994) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[93996] = true;
    index = 123013;
    while (index <= 123014) : (index += 1) {
        instance.array[index] = true;
    }
    index = 125069;
    while (index <= 125071) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name, 1. Code point kind
    return instance;
}

pub fn deinit(self: *Extender) void {
    self.allocator.free(self.array);
}

// isExtender checks if cp is of the kind Extender.
pub fn isExtender(self: Extender, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Struct name
//    1. Lowest code point
//    2. Highest code point
//! Unicode SentenceTerminal code points.

const lo: u21 = 0x21;
const hi: u21 = 0x1da88;

pub fn isSentenceTerminal(cp: u21) bool {
    if (cp < lo or cp > hi) return false;
    return switch (cp) {
        0x21 => true,
        0x2e => true,
        0x3f => true,
        0x589 => true,
        0x61e...0x61f => true,
        0x6d4 => true,
        0x700...0x702 => true,
        0x7f9 => true,
        0x837 => true,
        0x839 => true,
        0x83d...0x83e => true,
        0x964...0x965 => true,
        0x104a...0x104b => true,
        0x1362 => true,
        0x1367...0x1368 => true,
        0x166e => true,
        0x1735...0x1736 => true,
        0x1803 => true,
        0x1809 => true,
        0x1944...0x1945 => true,
        0x1aa8...0x1aab => true,
        0x1b5a...0x1b5b => true,
        0x1b5e...0x1b5f => true,
        0x1c3b...0x1c3c => true,
        0x1c7e...0x1c7f => true,
        0x203c...0x203d => true,
        0x2047...0x2049 => true,
        0x2e2e => true,
        0x2e3c => true,
        0x3002 => true,
        0xa4ff => true,
        0xa60e...0xa60f => true,
        0xa6f3 => true,
        0xa6f7 => true,
        0xa876...0xa877 => true,
        0xa8ce...0xa8cf => true,
        0xa92f => true,
        0xa9c8...0xa9c9 => true,
        0xaa5d...0xaa5f => true,
        0xaaf0...0xaaf1 => true,
        0xabeb => true,
        0xfe52 => true,
        0xfe56...0xfe57 => true,
        0xff01 => true,
        0xff0e => true,
        0xff1f => true,
        0xff61 => true,
        0x10a56...0x10a57 => true,
        0x10f55...0x10f59 => true,
        0x11047...0x11048 => true,
        0x110be...0x110c1 => true,
        0x11141...0x11143 => true,
        0x111c5...0x111c6 => true,
        0x111cd => true,
        0x111de...0x111df => true,
        0x11238...0x11239 => true,
        0x1123b...0x1123c => true,
        0x112a9 => true,
        0x1144b...0x1144c => true,
        0x115c2...0x115c3 => true,
        0x115c9...0x115d7 => true,
        0x11641...0x11642 => true,
        0x1173c...0x1173e => true,
        0x11944 => true,
        0x11946 => true,
        0x11a42...0x11a43 => true,
        0x11a9b...0x11a9c => true,
        0x11c41...0x11c42 => true,
        0x11ef7...0x11ef8 => true,
        0x16a6e...0x16a6f => true,
        0x16af5 => true,
        0x16b37...0x16b38 => true,
        0x16b44 => true,
        0x16e98 => true,
        0x1bc9f => true,
        0x1da88 => true,
        else => false,
    };
}
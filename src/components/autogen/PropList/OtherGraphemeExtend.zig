// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Other_Grapheme_Extend code points.

const std = @import("std");
const mem = std.mem;

const OtherGraphemeExtend = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 2494,
hi: u21 = 917631,

pub fn init(allocator: *mem.Allocator) !OtherGraphemeExtend {
    var instance = OtherGraphemeExtend{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 915138),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[0] = true;
    instance.array[25] = true;
    instance.array[384] = true;
    instance.array[409] = true;
    instance.array[512] = true;
    instance.array[537] = true;
    instance.array[772] = true;
    index = 791;
    while (index <= 792) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[896] = true;
    instance.array[921] = true;
    instance.array[1041] = true;
    instance.array[1057] = true;
    instance.array[4471] = true;
    instance.array[5710] = true;
    index = 9840;
    while (index <= 9841) : (index += 1) {
        instance.array[index] = true;
    }
    index = 62944;
    while (index <= 62945) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[67968] = true;
    instance.array[67993] = true;
    instance.array[68338] = true;
    instance.array[68351] = true;
    instance.array[68593] = true;
    instance.array[69490] = true;
    instance.array[116647] = true;
    index = 116656;
    while (index <= 116660) : (index += 1) {
        instance.array[index] = true;
    }
    index = 915042;
    while (index <= 915137) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *OtherGraphemeExtend) void {
    self.allocator.free(self.array);
}

// isOtherGraphemeExtend checks if cp is of the kind Other_Grapheme_Extend.
pub fn isOtherGraphemeExtend(self: OtherGraphemeExtend, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

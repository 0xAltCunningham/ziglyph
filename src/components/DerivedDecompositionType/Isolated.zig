// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Isolated code points.

const std = @import("std");
const mem = std.mem;

const Isolated = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 9312,
hi: u21 = 65275,

pub fn init(allocator: *mem.Allocator) !Isolated {
    var instance = Isolated{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 55964),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[55024] = true;
    instance.array[55026] = true;
    instance.array[55030] = true;
    instance.array[55034] = true;
    instance.array[55038] = true;
    instance.array[55042] = true;
    instance.array[55046] = true;
    instance.array[55050] = true;
    instance.array[55054] = true;
    instance.array[55058] = true;
    instance.array[55062] = true;
    instance.array[55066] = true;
    instance.array[55070] = true;
    instance.array[55074] = true;
    instance.array[55076] = true;
    instance.array[55078] = true;
    instance.array[55080] = true;
    instance.array[55082] = true;
    instance.array[55084] = true;
    instance.array[55086] = true;
    instance.array[55090] = true;
    instance.array[55094] = true;
    instance.array[55098] = true;
    instance.array[55102] = true;
    instance.array[55104] = true;
    instance.array[55108] = true;
    instance.array[55110] = true;
    instance.array[55114] = true;
    instance.array[55118] = true;
    instance.array[55120] = true;
    instance.array[55155] = true;
    instance.array[55159] = true;
    instance.array[55161] = true;
    instance.array[55163] = true;
    index = 55165;
    while (index <= 55166) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55168] = true;
    instance.array[55170] = true;
    instance.array[55172] = true;
    instance.array[55178] = true;
    instance.array[55180] = true;
    instance.array[55182] = true;
    instance.array[55184] = true;
    instance.array[55186] = true;
    instance.array[55188] = true;
    instance.array[55190] = true;
    instance.array[55193] = true;
    instance.array[55196] = true;
    index = 55200;
    while (index <= 55299) : (index += 1) {
        instance.array[index] = true;
    }
    index = 55445;
    while (index <= 55472) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55517] = true;
    index = 55696;
    while (index <= 55707) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55708] = true;
    instance.array[55824] = true;
    instance.array[55826] = true;
    instance.array[55828] = true;
    instance.array[55830] = true;
    instance.array[55832] = true;
    instance.array[55834] = true;
    instance.array[55836] = true;
    instance.array[55838] = true;
    index = 55840;
    while (index <= 55841) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55843] = true;
    instance.array[55845] = true;
    instance.array[55847] = true;
    instance.array[55849] = true;
    instance.array[55853] = true;
    instance.array[55855] = true;
    instance.array[55859] = true;
    instance.array[55861] = true;
    instance.array[55865] = true;
    instance.array[55869] = true;
    instance.array[55873] = true;
    instance.array[55877] = true;
    instance.array[55881] = true;
    instance.array[55883] = true;
    instance.array[55885] = true;
    instance.array[55887] = true;
    instance.array[55889] = true;
    instance.array[55893] = true;
    instance.array[55897] = true;
    instance.array[55901] = true;
    instance.array[55905] = true;
    instance.array[55909] = true;
    instance.array[55913] = true;
    instance.array[55917] = true;
    instance.array[55921] = true;
    instance.array[55925] = true;
    instance.array[55929] = true;
    instance.array[55933] = true;
    instance.array[55937] = true;
    instance.array[55941] = true;
    instance.array[55945] = true;
    instance.array[55949] = true;
    instance.array[55951] = true;
    instance.array[55953] = true;
    instance.array[55957] = true;
    instance.array[55959] = true;
    instance.array[55961] = true;
    instance.array[55963] = true;

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Isolated) void {
    self.allocator.free(self.array);
}

// isIsolated checks if cp is of the kind Isolated.
pub fn isIsolated(self: Isolated, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

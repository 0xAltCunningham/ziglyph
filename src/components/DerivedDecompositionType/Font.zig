// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Font code points.

const std = @import("std");
const mem = std.mem;

const Font = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 8450,
hi: u21 = 130041,

pub fn init(allocator: *mem.Allocator) !Font {
    var instance = Font{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 121592),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[0] = true;
    index = 8;
    while (index <= 17) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[19] = true;
    index = 23;
    while (index <= 27) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[34] = true;
    instance.array[38] = true;
    index = 42;
    while (index <= 43) : (index += 1) {
        instance.array[index] = true;
    }
    index = 45;
    while (index <= 47) : (index += 1) {
        instance.array[index] = true;
    }
    index = 49;
    while (index <= 50) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55] = true;
    index = 58;
    while (index <= 61) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[62] = true;
    index = 67;
    while (index <= 71) : (index += 1) {
        instance.array[index] = true;
    }
    index = 55838;
    while (index <= 55846) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[55847] = true;
    index = 111358;
    while (index <= 111442) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111444;
    while (index <= 111514) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111516;
    while (index <= 111517) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[111520] = true;
    index = 111523;
    while (index <= 111524) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111527;
    while (index <= 111530) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111532;
    while (index <= 111543) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[111545] = true;
    index = 111547;
    while (index <= 111553) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111555;
    while (index <= 111619) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111621;
    while (index <= 111624) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111627;
    while (index <= 111634) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111636;
    while (index <= 111642) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111644;
    while (index <= 111671) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111673;
    while (index <= 111676) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111678;
    while (index <= 111682) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[111684] = true;
    index = 111688;
    while (index <= 111694) : (index += 1) {
        instance.array[index] = true;
    }
    index = 111696;
    while (index <= 112035) : (index += 1) {
        instance.array[index] = true;
    }
    index = 112038;
    while (index <= 112062) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112063] = true;
    index = 112064;
    while (index <= 112088) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112089] = true;
    index = 112090;
    while (index <= 112120) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112121] = true;
    index = 112122;
    while (index <= 112146) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112147] = true;
    index = 112148;
    while (index <= 112178) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112179] = true;
    index = 112180;
    while (index <= 112204) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112205] = true;
    index = 112206;
    while (index <= 112236) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112237] = true;
    index = 112238;
    while (index <= 112262) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112263] = true;
    index = 112264;
    while (index <= 112294) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112295] = true;
    index = 112296;
    while (index <= 112320) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[112321] = true;
    index = 112322;
    while (index <= 112329) : (index += 1) {
        instance.array[index] = true;
    }
    index = 112332;
    while (index <= 112381) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118014;
    while (index <= 118017) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118019;
    while (index <= 118045) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118047;
    while (index <= 118048) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118050] = true;
    instance.array[118053] = true;
    index = 118055;
    while (index <= 118064) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118066;
    while (index <= 118069) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118071] = true;
    instance.array[118073] = true;
    instance.array[118080] = true;
    instance.array[118085] = true;
    instance.array[118087] = true;
    instance.array[118089] = true;
    index = 118091;
    while (index <= 118093) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118095;
    while (index <= 118096) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118098] = true;
    instance.array[118101] = true;
    instance.array[118103] = true;
    instance.array[118105] = true;
    instance.array[118107] = true;
    instance.array[118109] = true;
    index = 118111;
    while (index <= 118112) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118114] = true;
    index = 118117;
    while (index <= 118120) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118122;
    while (index <= 118128) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118130;
    while (index <= 118133) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118135;
    while (index <= 118138) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[118140] = true;
    index = 118142;
    while (index <= 118151) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118153;
    while (index <= 118169) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118175;
    while (index <= 118177) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118179;
    while (index <= 118183) : (index += 1) {
        instance.array[index] = true;
    }
    index = 118185;
    while (index <= 118201) : (index += 1) {
        instance.array[index] = true;
    }
    index = 121582;
    while (index <= 121591) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Font) void {
    self.allocator.free(self.array);
}

// isFont checks if cp is of the kind Font.
pub fn isFont(self: Font, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

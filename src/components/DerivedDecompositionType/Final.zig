// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    0. Code point type
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Final code points.

const std = @import("std");
const mem = std.mem;

const Final = @This();

allocator: *mem.Allocator,
array: []bool,
lo: u21 = 64336,
hi: u21 = 65276,

pub fn init(allocator: *mem.Allocator) !Final {
    var instance = Final{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 941),
    };

    mem.set(bool, instance.array, false);

    var index: u21 = 0;
    instance.array[1] = true;
    instance.array[3] = true;
    instance.array[7] = true;
    instance.array[11] = true;
    instance.array[15] = true;
    instance.array[19] = true;
    instance.array[23] = true;
    instance.array[27] = true;
    instance.array[31] = true;
    instance.array[35] = true;
    instance.array[39] = true;
    instance.array[43] = true;
    instance.array[47] = true;
    instance.array[51] = true;
    instance.array[53] = true;
    instance.array[55] = true;
    instance.array[57] = true;
    instance.array[59] = true;
    instance.array[61] = true;
    instance.array[63] = true;
    instance.array[67] = true;
    instance.array[71] = true;
    instance.array[75] = true;
    instance.array[79] = true;
    instance.array[81] = true;
    instance.array[85] = true;
    instance.array[87] = true;
    instance.array[91] = true;
    instance.array[95] = true;
    instance.array[97] = true;
    instance.array[132] = true;
    instance.array[136] = true;
    instance.array[138] = true;
    instance.array[140] = true;
    instance.array[143] = true;
    instance.array[145] = true;
    instance.array[147] = true;
    instance.array[149] = true;
    instance.array[155] = true;
    instance.array[157] = true;
    instance.array[159] = true;
    instance.array[161] = true;
    instance.array[163] = true;
    instance.array[165] = true;
    instance.array[167] = true;
    instance.array[170] = true;
    instance.array[173] = true;
    index = 276;
    while (index <= 326) : (index += 1) {
        instance.array[index] = true;
    }
    index = 449;
    while (index <= 476) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[492] = true;
    instance.array[513] = true;
    instance.array[520] = true;
    index = 522;
    while (index <= 523) : (index += 1) {
        instance.array[index] = true;
    }
    index = 526;
    while (index <= 527) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[530] = true;
    instance.array[532] = true;
    index = 534;
    while (index <= 535) : (index += 1) {
        instance.array[index] = true;
    }
    index = 537;
    while (index <= 538) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[540] = true;
    index = 542;
    while (index <= 543) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[545] = true;
    index = 548;
    while (index <= 550) : (index += 1) {
        instance.array[index] = true;
    }
    index = 552;
    while (index <= 556) : (index += 1) {
        instance.array[index] = true;
    }
    index = 558;
    while (index <= 562) : (index += 1) {
        instance.array[index] = true;
    }
    index = 564;
    while (index <= 565) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[567] = true;
    instance.array[571] = true;
    index = 582;
    while (index <= 583) : (index += 1) {
        instance.array[index] = true;
    }
    index = 585;
    while (index <= 588) : (index += 1) {
        instance.array[index] = true;
    }
    index = 590;
    while (index <= 611) : (index += 1) {
        instance.array[index] = true;
    }
    index = 614;
    while (index <= 615) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[617] = true;
    index = 619;
    while (index <= 626) : (index += 1) {
        instance.array[index] = true;
    }
    index = 630;
    while (index <= 631) : (index += 1) {
        instance.array[index] = true;
    }
    instance.array[818] = true;
    instance.array[820] = true;
    instance.array[822] = true;
    instance.array[824] = true;
    instance.array[826] = true;
    instance.array[830] = true;
    instance.array[832] = true;
    instance.array[836] = true;
    instance.array[838] = true;
    instance.array[842] = true;
    instance.array[846] = true;
    instance.array[850] = true;
    instance.array[854] = true;
    instance.array[858] = true;
    instance.array[860] = true;
    instance.array[862] = true;
    instance.array[864] = true;
    instance.array[866] = true;
    instance.array[870] = true;
    instance.array[874] = true;
    instance.array[878] = true;
    instance.array[882] = true;
    instance.array[886] = true;
    instance.array[890] = true;
    instance.array[894] = true;
    instance.array[898] = true;
    instance.array[902] = true;
    instance.array[906] = true;
    instance.array[910] = true;
    instance.array[914] = true;
    instance.array[918] = true;
    instance.array[922] = true;
    instance.array[926] = true;
    instance.array[928] = true;
    instance.array[930] = true;
    instance.array[934] = true;
    instance.array[936] = true;
    instance.array[938] = true;
    instance.array[940] = true;

    // Placeholder: 0. Struct name
    return instance;
}

pub fn deinit(self: *Final) void {
    self.allocator.free(self.array);
}

// isFinal checks if cp is of the kind Final.
pub fn isFinal(self: Final, cp: u21) bool {
    if (cp < self.lo or cp > self.hi) return false;
    const index = cp - self.lo;
    return if (index >= self.array.len) false else self.array[index];
}

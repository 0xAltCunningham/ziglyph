// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UCD.zip by running ucd_gen.sh.
//! Unicode case folding map.

const std = @import("std");
const mem = std.mem;
const unicode = std.unicode;

const CaseFoldMap = @This();

allocator: *std.mem.Allocator,
map: std.AutoHashMap(u21, []const u21),

const Singleton = struct {
    instance: *CaseFoldMap,
    ref_count: usize,
};

var singleton: ?Singleton = null;

pub fn init(allocator: *mem.Allocator) !*CaseFoldMap {
    if (singleton) |*s| {
        s.ref_count += 1;
        return s.instance;
    }

    var instance = try allocator.create(CaseFoldMap);

    instance.* = CaseFoldMap{
        .allocator = allocator,
        .map = std.AutoHashMap(u21, []const u21).init(allocator),
    };


// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    1. Struct name
//    2. Array length
//    3. Ranges length
//! Unicode Space category code points data.

const std = @import("std");
const Range = @import("../Range.zig");

const Space = @This();

array: [12289]bool = [_]bool{false} ** 12289,
ranges: [1]Range = undefined, // Should this be optional?

pub fn new() Space {
    var instance: Space = Space{};

    instance.array[32] = true;
    instance.array[160] = true;
    instance.array[5760] = true;
    instance.array[8239] = true;
    instance.array[8287] = true;
    instance.array[12288] = true;
    instance.ranges[0] = Range.new(0x2000, 0x200A);

    // Placeholder: Struct name.
    return instance;
}

pub fn isSpace(self: Space, cp: u21) bool {
    if (cp < self.array.len and self.array[cp]) return true;

    //for (self.ranges) |range| {
    //    if (cp >= range.start and cp <= range.end) return true;
    //}

    return false;
}

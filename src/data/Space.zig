// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    1. Struct name
//    2. Array length
//    3. Highest code point
//    4. Lowest code point
//! Unicode Space category code points data.

const std = @import("std");
const Range = @import("../Range.zig");

const Space = @This();

array: [12289]bool = [_]bool{false} ** 12289,
lo: u21 = 32,
hi: u21 = 12288,

pub fn new() Space {
    var instance: Space = Space{};

    instance.array[32] = true;
    instance.array[160] = true;
    instance.array[5760] = true;
    instance.array[8239] = true;
    instance.array[8287] = true;
    instance.array[12288] = true;

    var index: u21 = 0;
    index = 8192;
    while (index <= 8202) : (index += 1) {
        instance.array[index] = true;
    }

    // Placeholder: Struct name.
    return instance;
}

pub fn isSpace(self: Space, cp: u21) bool {
    return if (cp >= self.array.len or cp < self.lo or cp > self.hi) false else self.array[cp];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    1. Top-level comment
//    2. Struct name
//    3. Struct name
//    4. Array length
//! Unicode Title code points data.

const std = @import("std");
const Title = @This();

allocator: *std.mem.Allocator,
array: []bool,

pub fn init(allocator: *std.mem.Allocator) !Title {
    var instance = Title{
        .allocator = allocator,
        .array = try allocator.alloc(bool, 8189),
    };

    for (instance.array) |_, i| {
        instance.array[i] = false;
    }

    instance.array[453] = true;
    instance.array[456] = true;
    instance.array[459] = true;
    instance.array[498] = true;
    instance.array[8072] = true;
    instance.array[8073] = true;
    instance.array[8074] = true;
    instance.array[8075] = true;
    instance.array[8076] = true;
    instance.array[8077] = true;
    instance.array[8078] = true;
    instance.array[8079] = true;
    instance.array[8088] = true;
    instance.array[8089] = true;
    instance.array[8090] = true;
    instance.array[8091] = true;
    instance.array[8092] = true;
    instance.array[8093] = true;
    instance.array[8094] = true;
    instance.array[8095] = true;
    instance.array[8104] = true;
    instance.array[8105] = true;
    instance.array[8106] = true;
    instance.array[8107] = true;
    instance.array[8108] = true;
    instance.array[8109] = true;
    instance.array[8110] = true;
    instance.array[8111] = true;
    instance.array[8124] = true;
    instance.array[8140] = true;
    instance.array[8188] = true;
// Placeholder: Code point type.

    return instance;
}

const Self = @This();
pub fn deinit(self: *Self) void {
    self.allocator.free(self.array);
}

pub fn isTitle(self: Self, cp: u21) bool {
    return if (cp >= self.array.len) false else self.array[cp];
}

// Autogenerated from http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt by running ucd_gen.
// Placeholders:
//    1. Struct name
//    2. Array length
//    3. Ranges length
//! Unicode Punct category code points data.

const std = @import("std");
const Range = @import("../Range.zig");

const Punct = @This();

array: [125279]bool = [_]bool{false} ** 125279,
ranges: [117]Range = undefined, // Should this be optional?

pub fn new() Punct {
    var instance: Punct = Punct{};

    instance.array[95] = true;
    instance.array[123] = true;
    instance.array[125] = true;
    instance.array[161] = true;
    instance.array[167] = true;
    instance.array[171] = true;
    instance.array[187] = true;
    instance.array[191] = true;
    instance.array[894] = true;
    instance.array[903] = true;
    instance.array[1470] = true;
    instance.array[1472] = true;
    instance.array[1475] = true;
    instance.array[1478] = true;
    instance.array[1563] = true;
    instance.array[1748] = true;
    instance.array[2142] = true;
    instance.array[2416] = true;
    instance.array[2557] = true;
    instance.array[2678] = true;
    instance.array[2800] = true;
    instance.array[3191] = true;
    instance.array[3204] = true;
    instance.array[3572] = true;
    instance.array[3663] = true;
    instance.array[3860] = true;
    instance.array[3973] = true;
    instance.array[4347] = true;
    instance.array[5120] = true;
    instance.array[5742] = true;
    instance.array[7379] = true;
    instance.array[11632] = true;
    instance.array[11858] = true;
    instance.array[12336] = true;
    instance.array[12349] = true;
    instance.array[12448] = true;
    instance.array[12539] = true;
    instance.array[42611] = true;
    instance.array[42622] = true;
    instance.array[43260] = true;
    instance.array[43359] = true;
    instance.array[44011] = true;
    instance.array[65123] = true;
    instance.array[65128] = true;
    instance.array[65343] = true;
    instance.array[65371] = true;
    instance.array[65373] = true;
    instance.array[66463] = true;
    instance.array[66512] = true;
    instance.array[66927] = true;
    instance.array[67671] = true;
    instance.array[67871] = true;
    instance.array[67903] = true;
    instance.array[68223] = true;
    instance.array[69293] = true;
    instance.array[70093] = true;
    instance.array[70107] = true;
    instance.array[70313] = true;
    instance.array[70749] = true;
    instance.array[70854] = true;
    instance.array[71739] = true;
    instance.array[72162] = true;
    instance.array[73727] = true;
    instance.array[92917] = true;
    instance.array[92996] = true;
    instance.array[94178] = true;
    instance.array[113823] = true;
    instance.array[125278] = true;
    instance.ranges[0] = Range.new(0x21, 0x23);
    instance.ranges[1] = Range.new(0x25, 0x2A);
    instance.ranges[2] = Range.new(0x2C, 0x2F);
    instance.ranges[3] = Range.new(0x3A, 0x3B);
    instance.ranges[4] = Range.new(0x3F, 0x40);
    instance.ranges[5] = Range.new(0x5B, 0x5D);
    instance.ranges[6] = Range.new(0xB6, 0xB7);
    instance.ranges[7] = Range.new(0x55A, 0x55F);
    instance.ranges[8] = Range.new(0x589, 0x58A);
    instance.ranges[9] = Range.new(0x5F3, 0x5F4);
    instance.ranges[10] = Range.new(0x609, 0x60A);
    instance.ranges[11] = Range.new(0x60C, 0x60D);
    instance.ranges[12] = Range.new(0x61E, 0x61F);
    instance.ranges[13] = Range.new(0x66A, 0x66D);
    instance.ranges[14] = Range.new(0x700, 0x70D);
    instance.ranges[15] = Range.new(0x7F7, 0x7F9);
    instance.ranges[16] = Range.new(0x830, 0x83E);
    instance.ranges[17] = Range.new(0x964, 0x965);
    instance.ranges[18] = Range.new(0xE5A, 0xE5B);
    instance.ranges[19] = Range.new(0xF04, 0xF12);
    instance.ranges[20] = Range.new(0xF3A, 0xF3D);
    instance.ranges[21] = Range.new(0xFD0, 0xFD4);
    instance.ranges[22] = Range.new(0xFD9, 0xFDA);
    instance.ranges[23] = Range.new(0x104A, 0x104F);
    instance.ranges[24] = Range.new(0x1360, 0x1368);
    instance.ranges[25] = Range.new(0x169B, 0x169C);
    instance.ranges[26] = Range.new(0x16EB, 0x16ED);
    instance.ranges[27] = Range.new(0x1735, 0x1736);
    instance.ranges[28] = Range.new(0x17D4, 0x17D6);
    instance.ranges[29] = Range.new(0x17D8, 0x17DA);
    instance.ranges[30] = Range.new(0x1800, 0x180A);
    instance.ranges[31] = Range.new(0x1944, 0x1945);
    instance.ranges[32] = Range.new(0x1A1E, 0x1A1F);
    instance.ranges[33] = Range.new(0x1AA0, 0x1AA6);
    instance.ranges[34] = Range.new(0x1AA8, 0x1AAD);
    instance.ranges[35] = Range.new(0x1B5A, 0x1B60);
    instance.ranges[36] = Range.new(0x1BFC, 0x1BFF);
    instance.ranges[37] = Range.new(0x1C3B, 0x1C3F);
    instance.ranges[38] = Range.new(0x1C7E, 0x1C7F);
    instance.ranges[39] = Range.new(0x1CC0, 0x1CC7);
    instance.ranges[40] = Range.new(0x2010, 0x2027);
    instance.ranges[41] = Range.new(0x2030, 0x2043);
    instance.ranges[42] = Range.new(0x2045, 0x2051);
    instance.ranges[43] = Range.new(0x2053, 0x205E);
    instance.ranges[44] = Range.new(0x207D, 0x207E);
    instance.ranges[45] = Range.new(0x208D, 0x208E);
    instance.ranges[46] = Range.new(0x2308, 0x230B);
    instance.ranges[47] = Range.new(0x2329, 0x232A);
    instance.ranges[48] = Range.new(0x2768, 0x2775);
    instance.ranges[49] = Range.new(0x27C5, 0x27C6);
    instance.ranges[50] = Range.new(0x27E6, 0x27EF);
    instance.ranges[51] = Range.new(0x2983, 0x2998);
    instance.ranges[52] = Range.new(0x29D8, 0x29DB);
    instance.ranges[53] = Range.new(0x29FC, 0x29FD);
    instance.ranges[54] = Range.new(0x2CF9, 0x2CFC);
    instance.ranges[55] = Range.new(0x2CFE, 0x2CFF);
    instance.ranges[56] = Range.new(0x2E00, 0x2E2E);
    instance.ranges[57] = Range.new(0x2E30, 0x2E4F);
    instance.ranges[58] = Range.new(0x3001, 0x3003);
    instance.ranges[59] = Range.new(0x3008, 0x3011);
    instance.ranges[60] = Range.new(0x3014, 0x301F);
    instance.ranges[61] = Range.new(0xA4FE, 0xA4FF);
    instance.ranges[62] = Range.new(0xA60D, 0xA60F);
    instance.ranges[63] = Range.new(0xA6F2, 0xA6F7);
    instance.ranges[64] = Range.new(0xA874, 0xA877);
    instance.ranges[65] = Range.new(0xA8CE, 0xA8CF);
    instance.ranges[66] = Range.new(0xA8F8, 0xA8FA);
    instance.ranges[67] = Range.new(0xA92E, 0xA92F);
    instance.ranges[68] = Range.new(0xA9C1, 0xA9CD);
    instance.ranges[69] = Range.new(0xA9DE, 0xA9DF);
    instance.ranges[70] = Range.new(0xAA5C, 0xAA5F);
    instance.ranges[71] = Range.new(0xAADE, 0xAADF);
    instance.ranges[72] = Range.new(0xAAF0, 0xAAF1);
    instance.ranges[73] = Range.new(0xFD3E, 0xFD3F);
    instance.ranges[74] = Range.new(0xFE10, 0xFE19);
    instance.ranges[75] = Range.new(0xFE30, 0xFE52);
    instance.ranges[76] = Range.new(0xFE54, 0xFE61);
    instance.ranges[77] = Range.new(0xFE6A, 0xFE6B);
    instance.ranges[78] = Range.new(0xFF01, 0xFF03);
    instance.ranges[79] = Range.new(0xFF05, 0xFF0A);
    instance.ranges[80] = Range.new(0xFF0C, 0xFF0F);
    instance.ranges[81] = Range.new(0xFF1A, 0xFF1B);
    instance.ranges[82] = Range.new(0xFF1F, 0xFF20);
    instance.ranges[83] = Range.new(0xFF3B, 0xFF3D);
    instance.ranges[84] = Range.new(0xFF5F, 0xFF65);
    instance.ranges[85] = Range.new(0x10100, 0x10102);
    instance.ranges[86] = Range.new(0x10A50, 0x10A58);
    instance.ranges[87] = Range.new(0x10AF0, 0x10AF6);
    instance.ranges[88] = Range.new(0x10B39, 0x10B3F);
    instance.ranges[89] = Range.new(0x10B99, 0x10B9C);
    instance.ranges[90] = Range.new(0x10F55, 0x10F59);
    instance.ranges[91] = Range.new(0x11047, 0x1104D);
    instance.ranges[92] = Range.new(0x110BB, 0x110BC);
    instance.ranges[93] = Range.new(0x110BE, 0x110C1);
    instance.ranges[94] = Range.new(0x11140, 0x11143);
    instance.ranges[95] = Range.new(0x11174, 0x11175);
    instance.ranges[96] = Range.new(0x111C5, 0x111C8);
    instance.ranges[97] = Range.new(0x111DD, 0x111DF);
    instance.ranges[98] = Range.new(0x11238, 0x1123D);
    instance.ranges[99] = Range.new(0x1144B, 0x1144F);
    instance.ranges[100] = Range.new(0x1145A, 0x1145B);
    instance.ranges[101] = Range.new(0x115C1, 0x115D7);
    instance.ranges[102] = Range.new(0x11641, 0x11643);
    instance.ranges[103] = Range.new(0x11660, 0x1166C);
    instance.ranges[104] = Range.new(0x1173C, 0x1173E);
    instance.ranges[105] = Range.new(0x11944, 0x11946);
    instance.ranges[106] = Range.new(0x11A3F, 0x11A46);
    instance.ranges[107] = Range.new(0x11A9A, 0x11A9C);
    instance.ranges[108] = Range.new(0x11A9E, 0x11AA2);
    instance.ranges[109] = Range.new(0x11C41, 0x11C45);
    instance.ranges[110] = Range.new(0x11C70, 0x11C71);
    instance.ranges[111] = Range.new(0x11EF7, 0x11EF8);
    instance.ranges[112] = Range.new(0x12470, 0x12474);
    instance.ranges[113] = Range.new(0x16A6E, 0x16A6F);
    instance.ranges[114] = Range.new(0x16B37, 0x16B3B);
    instance.ranges[115] = Range.new(0x16E97, 0x16E9A);
    instance.ranges[116] = Range.new(0x1DA87, 0x1DA8B);

    // Placeholder: Struct name.
    return instance;
}

pub fn isPunct(self: Punct, cp: u21) bool {
    if (cp < self.array.len and self.array[cp]) return true;

    //for (self.ranges) |range| {
    //    if (cp >= range.start and cp <= range.end) return true;
    //}

    return false;
}
